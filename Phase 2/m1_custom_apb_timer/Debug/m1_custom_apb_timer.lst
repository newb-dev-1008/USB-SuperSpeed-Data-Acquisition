
m1_custom_apb_timer.elf:     file format elf32-littlearm
m1_custom_apb_timer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000115

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000e38 memsz 0x00001e60 flags rwx
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         00000e34  00000000  00000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00000e34  00000e34  00008e34  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000028  00000e38  00000e38  00008e38  2**2  ALLOC
  3 .stack        00001000  00000e60  00000e60  00008e38  2**0  ALLOC
  4 .debug_aranges 000002c0  00000000  00000000  00008e38  2**3  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001bf2  00000000  00000000  000090f8  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000747  00000000  00000000  0000acea  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001925  00000000  00000000  0000b431  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000954  00000000  00000000  0000cd58  2**2  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00009a57  00000000  00000000  0000d6ac  2**0  CONTENTS, READONLY, DEBUGGING
 10 .ARM.attributes 0000002f  00000000  00000000  00017103  2**0  CONTENTS, READONLY
 11 .debug_ranges 000001f0  00000000  00000000  00017132  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00002dfa  00000000  00000000  00017322  2**0  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000070  00000000  00000000  0001a11c  2**0  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000e34 l    d  .data	00000000 .data
00000e38 l    d  .bss	00000000 .bss
00000e60 l    d  .stack	00000000 .stack
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 ./hal/CortexM1/GNU/vector_table.o
00000000 l       .text	00000000 vector_table
00000000 l    df *ABS*	00000000 default_handlers.c
00000000 l    df *ABS*	00000000 hal_assert.c
00000000 l    df *ABS*	00000000 ./hal/CortexM1/GNU/hw_reg_access.o
00000000 l    df *ABS*	00000000 sys_boot.c
00000000 l    df *ABS*	00000000 cortex_nvic.c
00000000 l    df *ABS*	00000000 core_timer.c
00000e38 l     O .bss	00000004 NULL_timer_instance
00000000 l    df *ABS*	00000000 core_gpio.c
00000000 l    df *ABS*	00000000 core_brm1553.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 ./hal/CortexM1/GNU/hal.o
00000000 l    df *ABS*	00000000 newlib_stubs.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 
00000e34 l       .text	00000000 __exidx_end
00007000 l       *ABS*	00000000 RAM_SIZE
00000000 l       *ABS*	00000000 __DYNAMIC
00000e34 l       .text	00000000 __exidx_start
00000800 l       *ABS*	00000000 MAIN_STACK_SIZE
00000800 l       *ABS*	00000000 PROCESS_STACK_SIZE
00000000 l       *UND*	00000000 __sf_fake_stderr
00000000 l       *ABS*	00000000 RAM_START_ADDRESS
00000000 l       *UND*	00000000 __sf_fake_stdin
00000e60 l       .bss	00000000 _end
00000000 l       *UND*	00000000 __sf_fake_stdout
00000214 g     F .text	00000028 NVIC_clear_interrupt
00000e3c g     O .bss	00000004 g_timer0
00000e40 g     O .bss	00000008 g_gpio
000009ac g     F .text	0000016c BRMCmdBlk_Config
00000068 g     F .text	00000006 HardFault_Handler
00000e34 g       *ABS*	00000000 __data_load
00000000  w      *UND*	00000000 SysTick_Handler
0000010a g     F .text	00000000 HW_get_8bit_reg_field
00000000  w      *UND*	00000000 IRQ7_IRQHandler
00000078 g     F .text	00000006 PendSV_Handler
00000060 g     F .text	00000006 NMI_Handler
00000878 g     F .text	0000009c BRMReg_Config
00000e34 g     O .data	00000004 output_state
00000e34 g       .text	00000000 _etext
000000ac g     F .text	00000000 HW_set_32bit_reg
00000000  w      *UND*	00000000 IRQ4_IRQHandler
00000914 g     F .text	00000096 BRM_get_Cmd_Wrd
00000000 g       .text	00000000 __text_start
000001ec g     F .text	00000028 NVIC_enable_interrupt
000000f8 g     F .text	00000000 HW_set_8bit_reg_field
00000e38 g       .bss	00000000 __bss_start__
000003a4 g     F .text	00000054 TMR_enable_int
00000080 g     F .text	0000002c HAL_assert_fail
00000e48 g     O .bss	00000004 tm1schedulecounter
000000f0 g     F .text	00000000 HW_set_8bit_reg
000000f4 g     F .text	00000000 HW_get_8bit_reg
00000e4c g     O .bss	00000004 cycle_0
00000b18 g     F .text	00000012 IRQ0_IRQHandler
000000b4 g     F .text	00000000 HW_set_32bit_reg_field
0000023c g     F .text	00000114 TMR_init
00000e60 g       .bss	00000000 __bss_end__
00000000  w      *UND*	00000000 IRQ6_IRQHandler
00000114 g     F .text	000000ac _start
00000e60 g       .bss	00000000 __end
000000c6 g     F .text	00000000 HW_get_32bit_reg_field
00000448 g     F .text	00000110 GPIO_init
00000000  w      *UND*	00000000 IRQ5_IRQHandler
00000b8c g     F .text	00000264 main
00000070 g     F .text	00000006 SVC_Handler
00007000 g       *ABS*	00000000 __main_stack_start
00000000 g       *ABS*	00000000 __text_load
000000d2 g     F .text	00000000 HW_get_16bit_reg
000000d6 g     F .text	00000000 HW_set_16bit_reg_field
00000000  w      *UND*	00000000 IRQ2_IRQHandler
00000350 g     F .text	00000054 TMR_start
00000558 g     F .text	00000070 GPIO_config
00000000  w      *UND*	00000000 IRQ1_IRQHandler
000001c0 g     F .text	0000002c NVIC_init
00000e38 g       .data	00000000 _edata
00000e50 g     O .bss	00000004 tm2schedulecounter
000000b0 g     F .text	00000000 HW_get_32bit_reg
000000ce g     F .text	00000000 HW_set_16bit_reg
00000b2c g     F .text	00000060 timer0_isr
00000e54 g     O .bss	00000004 startbit
00000e34 g       .data	00000000 __data_start
00000000  w      *UND*	00000000 IRQ3_IRQHandler
000000e8 g     F .text	00000000 HW_get_16bit_reg_field
000005c8 g     F .text	00000254 GPIO_set_output
0000081c g     F .text	0000005a BRM_Reset
00000e58 g     O .bss	00000004 cycle_1
000003f8 g     F .text	00000050 TMR_clear_int



Disassembly of section .text:

00000000 <__text_start>:
vector_table():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal.S:23

#-------------------------------------------------------------------------------
# 
#
HAL_disable_interrupts:
	mrs r0, PRIMASK
   0:	00007000 	.word	0x00007000
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal.S:24
    cpsid I
   4:	00000115 	.word	0x00000115
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal.S:31

#-------------------------------------------------------------------------------
#
#
HAL_restore_interrupts:
	msr PRIMASK, r0
   8:	00000061 	.word	0x00000061
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal.S:32
	bx lr
   c:	00000069 	.word	0x00000069
	...
_sbrk():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/newlib_stubs.c:194
      heap_end = &_end;
    }
    
    prev_heap_end = heap_end;
    asm volatile ("MRS %0, msp" : "=r" (stack_ptr) );
    if (heap_end + incr > stack_ptr)
  2c:	00000071 	.word	0x00000071
	...
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/newlib_stubs.c:196
    {
      write (1, "Heap and stack collision\n", 25);
  38:	00000079 	.word	0x00000079
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/newlib_stubs.c:197
      abort ();
  3c:	00000000 	.word	0x00000000
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/newlib_stubs.c:200
    }
  
    heap_end += incr;
  40:	00000b19 	.word	0x00000b19
	...

00000060 <NMI_Handler>:
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/newlib_stubs.c:202
    return (caddr_t) prev_heap_end;
}
  60:	b580      	push	{r7, lr}
  62:	af00      	add	r7, sp, #0
NMI_Handler():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:18 (discriminator 1)
__attribute__((__interrupt__)) void NMI_Handler( void )
{
	while( 1 )
	{
		;
	}
  64:	e7fe      	b.n	64 <NMI_Handler+0x4>
  66:	46c0      	nop			; (mov r8, r8)

00000068 <HardFault_Handler>:
HardFault_Handler():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:25
 
/***************************************************************************//**
 * Hard Fault.
 */
__attribute__((__interrupt__)) void HardFault_Handler( void )
{
  68:	b580      	push	{r7, lr}
  6a:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:29 (discriminator 1)
	while( 1 )
	{
		;
	}
  6c:	e7fe      	b.n	6c <HardFault_Handler+0x4>
  6e:	46c0      	nop			; (mov r8, r8)

00000070 <SVC_Handler>:
SVC_Handler():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:36

/***************************************************************************//**
 * SVCall.
 */
__attribute__((__interrupt__)) void SVC_Handler( void )
{
  70:	b580      	push	{r7, lr}
  72:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:40 (discriminator 1)
	while( 1 )
	{
		;
	}
  74:	e7fe      	b.n	74 <SVC_Handler+0x4>
  76:	46c0      	nop			; (mov r8, r8)

00000078 <PendSV_Handler>:
PendSV_Handler():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:47

/***************************************************************************//**
 * PendSV.
 */
__attribute__((__interrupt__)) void PendSV_Handler( void )
{
  78:	b580      	push	{r7, lr}
  7a:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/default_handlers.c:51 (discriminator 1)
	while( 1 )
	{
		;
	}
  7c:	e7fe      	b.n	7c <PendSV_Handler+0x4>
  7e:	46c0      	nop			; (mov r8, r8)

00000080 <HAL_assert_fail>:
HAL_assert_fail():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:118
void HAL_assert_fail
(
    const uint8_t * file_name,
    uint32_t line_no
)
{
  80:	b580      	push	{r7, lr}
  82:	b086      	sub	sp, #24
  84:	af00      	add	r7, sp, #0
  86:	6078      	str	r0, [r7, #4]
  88:	6039      	str	r1, [r7, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:121 (discriminator 1)
    while(1)
    {
        volatile const uint8_t * assert_file = file_name;
  8a:	687b      	ldr	r3, [r7, #4]
  8c:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:122 (discriminator 1)
        volatile uint32_t assert_line = line_no;
  8e:	683b      	ldr	r3, [r7, #0]
  90:	613b      	str	r3, [r7, #16]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:127 (discriminator 1)
        volatile char dummy;
		volatile uint32_t i_dummy;
		
		/* following lines to avoid compiler warnings: */
        dummy = *assert_file;
  92:	697b      	ldr	r3, [r7, #20]
  94:	781b      	ldrb	r3, [r3, #0]
  96:	b2db      	uxtb	r3, r3
  98:	b2da      	uxtb	r2, r3
  9a:	230f      	movs	r3, #15
  9c:	18fb      	adds	r3, r7, r3
  9e:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:128 (discriminator 1)
		i_dummy = assert_line;
  a0:	693b      	ldr	r3, [r7, #16]
  a2:	60bb      	str	r3, [r7, #8]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:129 (discriminator 1)
		i_dummy++;
  a4:	68bb      	ldr	r3, [r7, #8]
  a6:	3301      	adds	r3, #1
  a8:	60bb      	str	r3, [r7, #8]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hal_assert.c:130 (discriminator 1)
    }
  aa:	e7ee      	b.n	8a <HAL_assert_fail+0xa>

000000ac <HW_set_32bit_reg>:
$t():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:44
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 * R1:   uint32_t value
 */
HW_set_32bit_reg: 	
	STR R1, [R0]
  ac:	6001      	str	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:45
	BX LR
  ae:	4770      	bx	lr

000000b0 <HW_get_32bit_reg>:
HW_get_32bit_reg():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:51

/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 */      
HW_get_32bit_reg:
	LDR R0, [R0]
  b0:	6800      	ldr	r0, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:52
	BX LR
  b2:	4770      	bx	lr

000000b4 <HW_set_32bit_reg_field>:
HW_set_32bit_reg_field():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:61
 * R1:   int_fast8_t shift
 * R2:   uint32_t mask
 * R3:   uint32_t value
 */
HW_set_32bit_reg_field:
    PUSH {R1,R2,R3,LR}
  b4:	b50e      	push	{r1, r2, r3, lr}
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:62
    LSLS R3, R3, R1
  b6:	408b      	lsls	r3, r1
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:63
    ANDS R3, R3, R2
  b8:	4013      	ands	r3, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:64
    LDR R1, [R0]
  ba:	6801      	ldr	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:65
    MVNS R2, R2
  bc:	43d2      	mvns	r2, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:66
    ANDS R1, R1, R2
  be:	4011      	ands	r1, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:67
    ORRS R1, R1, R3
  c0:	4319      	orrs	r1, r3
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:68
    STR R1, [R0]
  c2:	6001      	str	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:69
    POP {R1,R2,R3,PC}
  c4:	bd0e      	pop	{r1, r2, r3, pc}

000000c6 <HW_get_32bit_reg_field>:
HW_get_32bit_reg_field():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:77
 * R0:   addr_t reg_addr
 * R1:   int_fast8_t shift
 * R2:   uint32_t mask
 */
HW_get_32bit_reg_field:
    LDR R0, [R0]
  c6:	6800      	ldr	r0, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:78
    ANDS R0, R0, R2
  c8:	4010      	ands	r0, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:79
    LSRS R0, R0, R1
  ca:	40c8      	lsrs	r0, r1
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:80
    BX LR
  cc:	4770      	bx	lr

000000ce <HW_set_16bit_reg>:
HW_set_16bit_reg():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:87
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 * R1:   uint_fast16_t value
 */
HW_set_16bit_reg: 	
	STRH R1, [R0]
  ce:	8001      	strh	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:88
	BX LR
  d0:	4770      	bx	lr

000000d2 <HW_get_16bit_reg>:
HW_get_16bit_reg():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:94
        
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 */
HW_get_16bit_reg:
	LDRH R0, [R0]
  d2:	8800      	ldrh	r0, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:95
	BX LR
  d4:	4770      	bx	lr

000000d6 <HW_set_16bit_reg_field>:
HW_set_16bit_reg_field():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:104
 * R1:   int_fast8_t shift
 * R2:   uint_fast16_t mask
 * R3:   uint_fast16_t value
 */
HW_set_16bit_reg_field:
    PUSH {R1,R2,R3,LR}
  d6:	b50e      	push	{r1, r2, r3, lr}
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:105
    LSLS R3, R3, R1
  d8:	408b      	lsls	r3, r1
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:106
    ANDS R3, R3, R2
  da:	4013      	ands	r3, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:107
    LDRH R1, [R0]
  dc:	8801      	ldrh	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:108
    MVNS R2, R2
  de:	43d2      	mvns	r2, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:109
    ANDS R1, R1, R2
  e0:	4011      	ands	r1, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:110
    ORRS R1, R1, R3
  e2:	4319      	orrs	r1, r3
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:111
    STRH R1, [R0]
  e4:	8001      	strh	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:112
    POP {R1,R2,R3,PC}
  e6:	bd0e      	pop	{r1, r2, r3, pc}

000000e8 <HW_get_16bit_reg_field>:
HW_get_16bit_reg_field():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:120
 * R0:   addr_t reg_addr
 * R1:   int_fast8_t shift
 * R2:   uint_fast16_t mask
 */
HW_get_16bit_reg_field:
    LDRH R0, [R0]
  e8:	8800      	ldrh	r0, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:121
    ANDS R0, R0, R2
  ea:	4010      	ands	r0, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:122
    LSRS R0, R0, R1
  ec:	40c8      	lsrs	r0, r1
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:123
    BX LR
  ee:	4770      	bx	lr

000000f0 <HW_set_8bit_reg>:
HW_set_8bit_reg():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:130
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 * R1:   uint_fast8_t value
 */
HW_set_8bit_reg: 	
	STRB R1, [R0]
  f0:	7001      	strb	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:131
	BX LR
  f2:	4770      	bx	lr

000000f4 <HW_get_8bit_reg>:
HW_get_8bit_reg():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:137
        
/*------------------------------------------------------------------------------
 * R0:   addr_t reg_addr
 */
HW_get_8bit_reg:
	LDRB R0, [R0]
  f4:	7800      	ldrb	r0, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:138
	BX LR
  f6:	4770      	bx	lr

000000f8 <HW_set_8bit_reg_field>:
HW_set_8bit_reg_field():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:147
 * R1:   int_fast8_t shift
 * R2:   uint_fast8_t mask
 * R3:   uint_fast8_t value
 */
HW_set_8bit_reg_field:
    PUSH {R1,R2,R3,LR}
  f8:	b50e      	push	{r1, r2, r3, lr}
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:148
    LSLS R3, R3, R1
  fa:	408b      	lsls	r3, r1
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:149
    ANDS R3, R3, R2
  fc:	4013      	ands	r3, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:150
    LDRB R1, [R0]
  fe:	7801      	ldrb	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:151
    MVNS R2, R2
 100:	43d2      	mvns	r2, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:152
    ANDS R1, R1, R2
 102:	4011      	ands	r1, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:153
    ORRS R1, R1, R3
 104:	4319      	orrs	r1, r3
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:154
    STRB R1, [R0]
 106:	7001      	strb	r1, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:155
    POP {R1,R2,R3,PC}
 108:	bd0e      	pop	{r1, r2, r3, pc}

0000010a <HW_get_8bit_reg_field>:
HW_get_8bit_reg_field():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:163
 * R0:   addr_t reg_addr
 * R1:   int_fast8_t shift
 * R2:   uint_fast8_t mask
 */
HW_get_8bit_reg_field:
    LDRB R0, [R0]
 10a:	7800      	ldrb	r0, [r0, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:164
    ANDS R0, R0, R2
 10c:	4010      	ands	r0, r2
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:165
    LSRS R0, R0, R1
 10e:	40c8      	lsrs	r0, r1
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/hw_reg_access.S:166
    BX LR
 110:	4770      	bx	lr
	...

00000114 <_start>:
_start():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:35

/*------------------------------------------------------------------------------
 * _start() function called invoked on power up and warm reset.
 */
void _start( void)
{
 114:	b580      	push	{r7, lr}
 116:	b088      	sub	sp, #32
 118:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:40
	/*
	 * Copy text section if required (copy executable from LMA to VMA).
	 */
	{
		unsigned int * text_lma = &__text_load;
 11a:	4b21      	ldr	r3, [pc, #132]	; (1a0 <_start+0x8c>)
 11c:	61fb      	str	r3, [r7, #28]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:41
		unsigned int * end_text_vma = &_etext;
 11e:	4b21      	ldr	r3, [pc, #132]	; (1a4 <_start+0x90>)
 120:	60bb      	str	r3, [r7, #8]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:42
		unsigned int * text_vma = &__text_start;
 122:	4b21      	ldr	r3, [pc, #132]	; (1a8 <_start+0x94>)
 124:	61bb      	str	r3, [r7, #24]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:44
		
		if ( text_vma != text_lma)
 126:	69ba      	ldr	r2, [r7, #24]
 128:	69fb      	ldr	r3, [r7, #28]
 12a:	429a      	cmp	r2, r3
 12c:	d00c      	beq.n	148 <_start+0x34>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:46
		{
			while ( text_vma <= end_text_vma)
 12e:	e007      	b.n	140 <_start+0x2c>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:48
			{
				*text_vma++ = *text_lma++;
 130:	69bb      	ldr	r3, [r7, #24]
 132:	1d1a      	adds	r2, r3, #4
 134:	61ba      	str	r2, [r7, #24]
 136:	69fa      	ldr	r2, [r7, #28]
 138:	1d11      	adds	r1, r2, #4
 13a:	61f9      	str	r1, [r7, #28]
 13c:	6812      	ldr	r2, [r2, #0]
 13e:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:46
		unsigned int * end_text_vma = &_etext;
		unsigned int * text_vma = &__text_start;
		
		if ( text_vma != text_lma)
		{
			while ( text_vma <= end_text_vma)
 140:	69ba      	ldr	r2, [r7, #24]
 142:	68bb      	ldr	r3, [r7, #8]
 144:	429a      	cmp	r2, r3
 146:	d9f3      	bls.n	130 <_start+0x1c>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:57

	/*
	 * Copy data section if required (initialised variables).
	 */
	{
		unsigned int * data_lma = &__data_load;
 148:	4b18      	ldr	r3, [pc, #96]	; (1ac <_start+0x98>)
 14a:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:58
		unsigned int * end_data_vma = &_edata;
 14c:	4b18      	ldr	r3, [pc, #96]	; (1b0 <_start+0x9c>)
 14e:	607b      	str	r3, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:59
		unsigned int * data_vma = &__data_start;
 150:	4b18      	ldr	r3, [pc, #96]	; (1b4 <_start+0xa0>)
 152:	613b      	str	r3, [r7, #16]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:61
		
		if ( data_vma != data_lma )
 154:	693a      	ldr	r2, [r7, #16]
 156:	697b      	ldr	r3, [r7, #20]
 158:	429a      	cmp	r2, r3
 15a:	d00c      	beq.n	176 <_start+0x62>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:63
		{
			while ( data_vma <= end_data_vma )
 15c:	e007      	b.n	16e <_start+0x5a>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:65
			{
				*data_vma++ = *data_lma++;
 15e:	693b      	ldr	r3, [r7, #16]
 160:	1d1a      	adds	r2, r3, #4
 162:	613a      	str	r2, [r7, #16]
 164:	697a      	ldr	r2, [r7, #20]
 166:	1d11      	adds	r1, r2, #4
 168:	6179      	str	r1, [r7, #20]
 16a:	6812      	ldr	r2, [r2, #0]
 16c:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:63
		unsigned int * end_data_vma = &_edata;
		unsigned int * data_vma = &__data_start;
		
		if ( data_vma != data_lma )
		{
			while ( data_vma <= end_data_vma )
 16e:	693a      	ldr	r2, [r7, #16]
 170:	687b      	ldr	r3, [r7, #4]
 172:	429a      	cmp	r2, r3
 174:	d9f3      	bls.n	15e <_start+0x4a>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:74
	
	/*
	 * Zero out the bss section (set non-initialised variables to 0). 
	 */
	{
		unsigned int * bss = &__bss_start__;
 176:	4b10      	ldr	r3, [pc, #64]	; (1b8 <_start+0xa4>)
 178:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:75
		unsigned int * bss_end = &__bss_end__;
 17a:	4b10      	ldr	r3, [pc, #64]	; (1bc <_start+0xa8>)
 17c:	603b      	str	r3, [r7, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:77
		
		if ( bss_end > bss)
 17e:	683a      	ldr	r2, [r7, #0]
 180:	68fb      	ldr	r3, [r7, #12]
 182:	429a      	cmp	r2, r3
 184:	d909      	bls.n	19a <_start+0x86>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:79
		{
			while ( bss <= bss_end )
 186:	e004      	b.n	192 <_start+0x7e>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:81
			{
				*bss++ = 0;
 188:	68fb      	ldr	r3, [r7, #12]
 18a:	1d1a      	adds	r2, r3, #4
 18c:	60fa      	str	r2, [r7, #12]
 18e:	2200      	movs	r2, #0
 190:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:79
		unsigned int * bss = &__bss_start__;
		unsigned int * bss_end = &__bss_end__;
		
		if ( bss_end > bss)
		{
			while ( bss <= bss_end )
 192:	68fa      	ldr	r2, [r7, #12]
 194:	683b      	ldr	r3, [r7, #0]
 196:	429a      	cmp	r2, r3
 198:	d9f6      	bls.n	188 <_start+0x74>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:89
	}
	
	/*
	 * Call main.
	 */
	main();
 19a:	f000 fcf7 	bl	b8c <main>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/GNU/sys_boot.c:97 (discriminator 1)
	 * We should never return from _start().
	 */
	while( 1 )
	{
		;
	}
 19e:	e7fe      	b.n	19e <_start+0x8a>
 1a0:	00000000 	.word	0x00000000
 1a4:	00000e34 	.word	0x00000e34
 1a8:	00000000 	.word	0x00000000
 1ac:	00000e34 	.word	0x00000e34
 1b0:	00000e38 	.word	0x00000e38
 1b4:	00000e34 	.word	0x00000e34
 1b8:	00000e38 	.word	0x00000e38
 1bc:	00000e60 	.word	0x00000e60

000001c0 <NVIC_init>:
NVIC_init():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:31
/***************************************************************************//**
 * NVIC_init()
 * See "cortex_nvic.h" for details of how to use this function.
 */
void NVIC_init( void )
{
 1c0:	b580      	push	{r7, lr}
 1c2:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:33
    /* Disable external interrupts. */
	HAL_set_32bit_reg(NVIC_BASE_ADDR, CLRENA, DISABLE_INTERRUPTS );
 1c4:	4a07      	ldr	r2, [pc, #28]	; (1e4 <NVIC_init+0x24>)
 1c6:	2301      	movs	r3, #1
 1c8:	425b      	negs	r3, r3
 1ca:	1c10      	adds	r0, r2, #0
 1cc:	1c19      	adds	r1, r3, #0
 1ce:	f7ff ff6d 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:36

    /* Clear pending external interrupts. */
    HAL_set_32bit_reg(NVIC_BASE_ADDR, CLRPEND, CLEAR_INTERRUPTS );
 1d2:	4a05      	ldr	r2, [pc, #20]	; (1e8 <NVIC_init+0x28>)
 1d4:	2301      	movs	r3, #1
 1d6:	425b      	negs	r3, r3
 1d8:	1c10      	adds	r0, r2, #0
 1da:	1c19      	adds	r1, r3, #0
 1dc:	f7ff ff66 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:37
}
 1e0:	46bd      	mov	sp, r7
 1e2:	bd80      	pop	{r7, pc}
 1e4:	e000e180 	.word	0xe000e180
 1e8:	e000e280 	.word	0xe000e280

000001ec <NVIC_enable_interrupt>:
NVIC_enable_interrupt():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:56
/***************************************************************************//**
 * NVIC_enable_interrupt()
 * See "cortex_nvic.h" for details of how to use this function.
 */
void NVIC_enable_interrupt( uint32_t interrupt_nb )
{
 1ec:	b580      	push	{r7, lr}
 1ee:	b084      	sub	sp, #16
 1f0:	af00      	add	r7, sp, #0
 1f2:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:57
    uint32_t int_mask = 1 << interrupt_nb;
 1f4:	687b      	ldr	r3, [r7, #4]
 1f6:	2201      	movs	r2, #1
 1f8:	409a      	lsls	r2, r3
 1fa:	1c13      	adds	r3, r2, #0
 1fc:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:58
	HAL_set_32bit_reg( NVIC_BASE_ADDR, SETENA, int_mask );
 1fe:	4a04      	ldr	r2, [pc, #16]	; (210 <NVIC_enable_interrupt+0x24>)
 200:	68fb      	ldr	r3, [r7, #12]
 202:	1c10      	adds	r0, r2, #0
 204:	1c19      	adds	r1, r3, #0
 206:	f7ff ff51 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:59
}
 20a:	46bd      	mov	sp, r7
 20c:	b004      	add	sp, #16
 20e:	bd80      	pop	{r7, pc}
 210:	e000e100 	.word	0xe000e100

00000214 <NVIC_clear_interrupt>:
NVIC_clear_interrupt():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:76
/***************************************************************************//**
 * NVIC_clear_interrupt()
 * See "cortex_nvic.h" for details of how to use this function.
 */
void NVIC_clear_interrupt( uint32_t interrupt_nb )
{
 214:	b580      	push	{r7, lr}
 216:	b084      	sub	sp, #16
 218:	af00      	add	r7, sp, #0
 21a:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:77
    uint32_t int_mask = 1 << interrupt_nb;
 21c:	687b      	ldr	r3, [r7, #4]
 21e:	2201      	movs	r2, #1
 220:	409a      	lsls	r2, r3
 222:	1c13      	adds	r3, r2, #0
 224:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:78
	HAL_set_32bit_reg(NVIC_BASE_ADDR, CLRPEND, int_mask );
 226:	4a04      	ldr	r2, [pc, #16]	; (238 <NVIC_clear_interrupt+0x24>)
 228:	68fb      	ldr	r3, [r7, #12]
 22a:	1c10      	adds	r0, r2, #0
 22c:	1c19      	adds	r1, r3, #0
 22e:	f7ff ff3d 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../hal/CortexM1/cortex_nvic.c:79
}
 232:	46bd      	mov	sp, r7
 234:	b004      	add	sp, #16
 236:	bd80      	pop	{r7, pc}
 238:	e000e280 	.word	0xe000e280

0000023c <TMR_init>:
TMR_init():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:32
    addr_t address,
    uint8_t mode,
    uint32_t prescale,
    uint32_t load_value
)
{
 23c:	b590      	push	{r4, r7, lr}
 23e:	b08f      	sub	sp, #60	; 0x3c
 240:	af00      	add	r7, sp, #0
 242:	60f8      	str	r0, [r7, #12]
 244:	60b9      	str	r1, [r7, #8]
 246:	603b      	str	r3, [r7, #0]
 248:	1dfb      	adds	r3, r7, #7
 24a:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:33
    HAL_ASSERT( this_timer != NULL_timer_instance )
 24c:	4b3e      	ldr	r3, [pc, #248]	; (348 <TMR_init+0x10c>)
 24e:	681b      	ldr	r3, [r3, #0]
 250:	68fa      	ldr	r2, [r7, #12]
 252:	429a      	cmp	r2, r3
 254:	d110      	bne.n	278 <TMR_init+0x3c>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:33 (discriminator 1)
 256:	2314      	movs	r3, #20
 258:	18fb      	adds	r3, r7, r3
 25a:	4a3c      	ldr	r2, [pc, #240]	; (34c <TMR_init+0x110>)
 25c:	ca13      	ldmia	r2!, {r0, r1, r4}
 25e:	c313      	stmia	r3!, {r0, r1, r4}
 260:	ca13      	ldmia	r2!, {r0, r1, r4}
 262:	c313      	stmia	r3!, {r0, r1, r4}
 264:	ca03      	ldmia	r2!, {r0, r1}
 266:	c303      	stmia	r3!, {r0, r1}
 268:	8812      	ldrh	r2, [r2, #0]
 26a:	801a      	strh	r2, [r3, #0]
 26c:	2314      	movs	r3, #20
 26e:	18fb      	adds	r3, r7, r3
 270:	1c18      	adds	r0, r3, #0
 272:	2121      	movs	r1, #33	; 0x21
 274:	f7ff ff04 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:34
    HAL_ASSERT( prescale <= PRESCALER_DIV_1024 )
 278:	683b      	ldr	r3, [r7, #0]
 27a:	2b09      	cmp	r3, #9
 27c:	d910      	bls.n	2a0 <TMR_init+0x64>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:34 (discriminator 1)
 27e:	2314      	movs	r3, #20
 280:	18fb      	adds	r3, r7, r3
 282:	4a32      	ldr	r2, [pc, #200]	; (34c <TMR_init+0x110>)
 284:	ca13      	ldmia	r2!, {r0, r1, r4}
 286:	c313      	stmia	r3!, {r0, r1, r4}
 288:	ca13      	ldmia	r2!, {r0, r1, r4}
 28a:	c313      	stmia	r3!, {r0, r1, r4}
 28c:	ca03      	ldmia	r2!, {r0, r1}
 28e:	c303      	stmia	r3!, {r0, r1}
 290:	8812      	ldrh	r2, [r2, #0]
 292:	801a      	strh	r2, [r3, #0]
 294:	2314      	movs	r3, #20
 296:	18fb      	adds	r3, r7, r3
 298:	1c18      	adds	r0, r3, #0
 29a:	2122      	movs	r1, #34	; 0x22
 29c:	f7ff fef0 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:35
    HAL_ASSERT( load_value != 0 )
 2a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 2a2:	2b00      	cmp	r3, #0
 2a4:	d110      	bne.n	2c8 <TMR_init+0x8c>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:35 (discriminator 1)
 2a6:	2314      	movs	r3, #20
 2a8:	18fb      	adds	r3, r7, r3
 2aa:	4a28      	ldr	r2, [pc, #160]	; (34c <TMR_init+0x110>)
 2ac:	ca13      	ldmia	r2!, {r0, r1, r4}
 2ae:	c313      	stmia	r3!, {r0, r1, r4}
 2b0:	ca13      	ldmia	r2!, {r0, r1, r4}
 2b2:	c313      	stmia	r3!, {r0, r1, r4}
 2b4:	ca03      	ldmia	r2!, {r0, r1}
 2b6:	c303      	stmia	r3!, {r0, r1}
 2b8:	8812      	ldrh	r2, [r2, #0]
 2ba:	801a      	strh	r2, [r3, #0]
 2bc:	2314      	movs	r3, #20
 2be:	18fb      	adds	r3, r7, r3
 2c0:	1c18      	adds	r0, r3, #0
 2c2:	2123      	movs	r1, #35	; 0x23
 2c4:	f7ff fedc 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:37
    
    this_timer->base_address = address;
 2c8:	68fb      	ldr	r3, [r7, #12]
 2ca:	68ba      	ldr	r2, [r7, #8]
 2cc:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:40

    /* Disable interrupts. */
    HAL_set_32bit_reg_field( address, InterruptEnable,0 );
 2ce:	68bb      	ldr	r3, [r7, #8]
 2d0:	3308      	adds	r3, #8
 2d2:	1c18      	adds	r0, r3, #0
 2d4:	2101      	movs	r1, #1
 2d6:	2202      	movs	r2, #2
 2d8:	2300      	movs	r3, #0
 2da:	f7ff feeb 	bl	b4 <HW_set_32bit_reg_field>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:43

    /* Disable timer. */
    HAL_set_32bit_reg_field( address, TimerEnable, 0 );
 2de:	68bb      	ldr	r3, [r7, #8]
 2e0:	3308      	adds	r3, #8
 2e2:	1c18      	adds	r0, r3, #0
 2e4:	2100      	movs	r1, #0
 2e6:	2201      	movs	r2, #1
 2e8:	2300      	movs	r3, #0
 2ea:	f7ff fee3 	bl	b4 <HW_set_32bit_reg_field>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:46

    /* Clear pending interrupt. */
    HAL_set_32bit_reg( address, TimerIntClr, 1 );
 2ee:	68bb      	ldr	r3, [r7, #8]
 2f0:	3310      	adds	r3, #16
 2f2:	1c18      	adds	r0, r3, #0
 2f4:	2101      	movs	r1, #1
 2f6:	f7ff fed9 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:49

    /* Configure prescaler and load value. */    
    HAL_set_32bit_reg( address, TimerPrescale, prescale );
 2fa:	68bb      	ldr	r3, [r7, #8]
 2fc:	330c      	adds	r3, #12
 2fe:	1c1a      	adds	r2, r3, #0
 300:	683b      	ldr	r3, [r7, #0]
 302:	1c10      	adds	r0, r2, #0
 304:	1c19      	adds	r1, r3, #0
 306:	f7ff fed1 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:50
    HAL_set_32bit_reg( address, TimerLoad, load_value );
 30a:	68ba      	ldr	r2, [r7, #8]
 30c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 30e:	1c10      	adds	r0, r2, #0
 310:	1c19      	adds	r1, r3, #0
 312:	f7ff fecb 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:53

    /* Set the interrupt mode. */
    if ( mode == TMR_CONTINUOUS_MODE )
 316:	1dfb      	adds	r3, r7, #7
 318:	781b      	ldrb	r3, [r3, #0]
 31a:	2b00      	cmp	r3, #0
 31c:	d108      	bne.n	330 <TMR_init+0xf4>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:55
    {
        HAL_set_32bit_reg_field( address, TimerMode, 0 );
 31e:	68bb      	ldr	r3, [r7, #8]
 320:	3308      	adds	r3, #8
 322:	1c18      	adds	r0, r3, #0
 324:	2102      	movs	r1, #2
 326:	2204      	movs	r2, #4
 328:	2300      	movs	r3, #0
 32a:	f7ff fec3 	bl	b4 <HW_set_32bit_reg_field>
 32e:	e007      	b.n	340 <TMR_init+0x104>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:60
    }
    else
    {
        /* TMR_ONE_SHOT_MODE */
        HAL_set_32bit_reg_field( address, TimerMode, 1 );
 330:	68bb      	ldr	r3, [r7, #8]
 332:	3308      	adds	r3, #8
 334:	1c18      	adds	r0, r3, #0
 336:	2102      	movs	r1, #2
 338:	2204      	movs	r2, #4
 33a:	2301      	movs	r3, #1
 33c:	f7ff feba 	bl	b4 <HW_set_32bit_reg_field>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:62
    }
}
 340:	46bd      	mov	sp, r7
 342:	b00f      	add	sp, #60	; 0x3c
 344:	bd90      	pop	{r4, r7, pc}
 346:	46c0      	nop			; (mov r8, r8)
 348:	00000e38 	.word	0x00000e38
 34c:	00000df0 	.word	0x00000df0

00000350 <TMR_start>:
TMR_start():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:73
void
TMR_start
(
    timer_instance_t * this_timer
)
{
 350:	b590      	push	{r4, r7, lr}
 352:	b08d      	sub	sp, #52	; 0x34
 354:	af00      	add	r7, sp, #0
 356:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:74
    HAL_ASSERT( this_timer != NULL_timer_instance )
 358:	4b10      	ldr	r3, [pc, #64]	; (39c <TMR_start+0x4c>)
 35a:	681b      	ldr	r3, [r3, #0]
 35c:	687a      	ldr	r2, [r7, #4]
 35e:	429a      	cmp	r2, r3
 360:	d110      	bne.n	384 <TMR_start+0x34>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:74 (discriminator 1)
 362:	230c      	movs	r3, #12
 364:	18fb      	adds	r3, r7, r3
 366:	4a0e      	ldr	r2, [pc, #56]	; (3a0 <TMR_start+0x50>)
 368:	ca13      	ldmia	r2!, {r0, r1, r4}
 36a:	c313      	stmia	r3!, {r0, r1, r4}
 36c:	ca13      	ldmia	r2!, {r0, r1, r4}
 36e:	c313      	stmia	r3!, {r0, r1, r4}
 370:	ca03      	ldmia	r2!, {r0, r1}
 372:	c303      	stmia	r3!, {r0, r1}
 374:	8812      	ldrh	r2, [r2, #0]
 376:	801a      	strh	r2, [r3, #0]
 378:	230c      	movs	r3, #12
 37a:	18fb      	adds	r3, r7, r3
 37c:	1c18      	adds	r0, r3, #0
 37e:	214a      	movs	r1, #74	; 0x4a
 380:	f7ff fe7e 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:76
    
    HAL_set_32bit_reg_field( this_timer->base_address, TimerEnable, 1 );
 384:	687b      	ldr	r3, [r7, #4]
 386:	681b      	ldr	r3, [r3, #0]
 388:	3308      	adds	r3, #8
 38a:	1c18      	adds	r0, r3, #0
 38c:	2100      	movs	r1, #0
 38e:	2201      	movs	r2, #1
 390:	2301      	movs	r3, #1
 392:	f7ff fe8f 	bl	b4 <HW_set_32bit_reg_field>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:77
}
 396:	46bd      	mov	sp, r7
 398:	b00d      	add	sp, #52	; 0x34
 39a:	bd90      	pop	{r4, r7, pc}
 39c:	00000e38 	.word	0x00000e38
 3a0:	00000df0 	.word	0x00000df0

000003a4 <TMR_enable_int>:
TMR_enable_int():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:104
void
TMR_enable_int
(
    timer_instance_t * this_timer
)
{
 3a4:	b590      	push	{r4, r7, lr}
 3a6:	b08d      	sub	sp, #52	; 0x34
 3a8:	af00      	add	r7, sp, #0
 3aa:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:105
    HAL_ASSERT( this_timer != NULL_timer_instance )
 3ac:	4b10      	ldr	r3, [pc, #64]	; (3f0 <TMR_enable_int+0x4c>)
 3ae:	681b      	ldr	r3, [r3, #0]
 3b0:	687a      	ldr	r2, [r7, #4]
 3b2:	429a      	cmp	r2, r3
 3b4:	d110      	bne.n	3d8 <TMR_enable_int+0x34>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:105 (discriminator 1)
 3b6:	230c      	movs	r3, #12
 3b8:	18fb      	adds	r3, r7, r3
 3ba:	4a0e      	ldr	r2, [pc, #56]	; (3f4 <TMR_enable_int+0x50>)
 3bc:	ca13      	ldmia	r2!, {r0, r1, r4}
 3be:	c313      	stmia	r3!, {r0, r1, r4}
 3c0:	ca13      	ldmia	r2!, {r0, r1, r4}
 3c2:	c313      	stmia	r3!, {r0, r1, r4}
 3c4:	ca03      	ldmia	r2!, {r0, r1}
 3c6:	c303      	stmia	r3!, {r0, r1}
 3c8:	8812      	ldrh	r2, [r2, #0]
 3ca:	801a      	strh	r2, [r3, #0]
 3cc:	230c      	movs	r3, #12
 3ce:	18fb      	adds	r3, r7, r3
 3d0:	1c18      	adds	r0, r3, #0
 3d2:	2169      	movs	r1, #105	; 0x69
 3d4:	f7ff fe54 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:107
    
    HAL_set_32bit_reg_field( this_timer->base_address, InterruptEnable, 1 );
 3d8:	687b      	ldr	r3, [r7, #4]
 3da:	681b      	ldr	r3, [r3, #0]
 3dc:	3308      	adds	r3, #8
 3de:	1c18      	adds	r0, r3, #0
 3e0:	2101      	movs	r1, #1
 3e2:	2202      	movs	r2, #2
 3e4:	2301      	movs	r3, #1
 3e6:	f7ff fe65 	bl	b4 <HW_set_32bit_reg_field>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:108
}
 3ea:	46bd      	mov	sp, r7
 3ec:	b00d      	add	sp, #52	; 0x34
 3ee:	bd90      	pop	{r4, r7, pc}
 3f0:	00000e38 	.word	0x00000e38
 3f4:	00000df0 	.word	0x00000df0

000003f8 <TMR_clear_int>:
TMR_clear_int():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:119
void
TMR_clear_int
(
    timer_instance_t * this_timer
)
{
 3f8:	b590      	push	{r4, r7, lr}
 3fa:	b08d      	sub	sp, #52	; 0x34
 3fc:	af00      	add	r7, sp, #0
 3fe:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:120
    HAL_ASSERT( this_timer != NULL_timer_instance )
 400:	4b0f      	ldr	r3, [pc, #60]	; (440 <TMR_clear_int+0x48>)
 402:	681b      	ldr	r3, [r3, #0]
 404:	687a      	ldr	r2, [r7, #4]
 406:	429a      	cmp	r2, r3
 408:	d110      	bne.n	42c <TMR_clear_int+0x34>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:120 (discriminator 1)
 40a:	230c      	movs	r3, #12
 40c:	18fb      	adds	r3, r7, r3
 40e:	4a0d      	ldr	r2, [pc, #52]	; (444 <TMR_clear_int+0x4c>)
 410:	ca13      	ldmia	r2!, {r0, r1, r4}
 412:	c313      	stmia	r3!, {r0, r1, r4}
 414:	ca13      	ldmia	r2!, {r0, r1, r4}
 416:	c313      	stmia	r3!, {r0, r1, r4}
 418:	ca03      	ldmia	r2!, {r0, r1}
 41a:	c303      	stmia	r3!, {r0, r1}
 41c:	8812      	ldrh	r2, [r2, #0]
 41e:	801a      	strh	r2, [r3, #0]
 420:	230c      	movs	r3, #12
 422:	18fb      	adds	r3, r7, r3
 424:	1c18      	adds	r0, r3, #0
 426:	2178      	movs	r1, #120	; 0x78
 428:	f7ff fe2a 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:122
    
    HAL_set_32bit_reg( this_timer->base_address, TimerIntClr, 0x01 );
 42c:	687b      	ldr	r3, [r7, #4]
 42e:	681b      	ldr	r3, [r3, #0]
 430:	3310      	adds	r3, #16
 432:	1c18      	adds	r0, r3, #0
 434:	2101      	movs	r1, #1
 436:	f7ff fe39 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreTimer/core_timer.c:123
}
 43a:	46bd      	mov	sp, r7
 43c:	b00d      	add	sp, #52	; 0x34
 43e:	bd90      	pop	{r4, r7, pc}
 440:	00000e38 	.word	0x00000e38
 444:	00000df0 	.word	0x00000df0

00000448 <GPIO_init>:
GPIO_init():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:37
(
    gpio_instance_t *   this_gpio,
    addr_t              base_addr,
    gpio_apb_width_t    bus_width
)
{
 448:	b590      	push	{r4, r7, lr}
 44a:	b08f      	sub	sp, #60	; 0x3c
 44c:	af00      	add	r7, sp, #0
 44e:	60f8      	str	r0, [r7, #12]
 450:	60b9      	str	r1, [r7, #8]
 452:	1dfb      	adds	r3, r7, #7
 454:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:38
    uint8_t i = 0;
 456:	2337      	movs	r3, #55	; 0x37
 458:	18fb      	adds	r3, r7, r3
 45a:	2200      	movs	r2, #0
 45c:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:39
    addr_t cfg_reg_addr = base_addr;
 45e:	68bb      	ldr	r3, [r7, #8]
 460:	633b      	str	r3, [r7, #48]	; 0x30
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:41
    
    this_gpio->base_addr = base_addr;
 462:	68fb      	ldr	r3, [r7, #12]
 464:	68ba      	ldr	r2, [r7, #8]
 466:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:42
    this_gpio->apb_bus_width = bus_width;
 468:	68fb      	ldr	r3, [r7, #12]
 46a:	1dfa      	adds	r2, r7, #7
 46c:	7812      	ldrb	r2, [r2, #0]
 46e:	711a      	strb	r2, [r3, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:45
    
    /* Clear configuration. */
    for( i = 0, cfg_reg_addr = base_addr; i < NB_OF_GPIO; ++i )
 470:	2337      	movs	r3, #55	; 0x37
 472:	18fb      	adds	r3, r7, r3
 474:	2200      	movs	r2, #0
 476:	701a      	strb	r2, [r3, #0]
 478:	68bb      	ldr	r3, [r7, #8]
 47a:	633b      	str	r3, [r7, #48]	; 0x30
 47c:	e00e      	b.n	49c <GPIO_init+0x54>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:47 (discriminator 3)
    {
        HW_set_8bit_reg( cfg_reg_addr, 0 );
 47e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 480:	1c18      	adds	r0, r3, #0
 482:	2100      	movs	r1, #0
 484:	f7ff fe34 	bl	f0 <HW_set_8bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:48 (discriminator 3)
        cfg_reg_addr += 4;
 488:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 48a:	3304      	adds	r3, #4
 48c:	633b      	str	r3, [r7, #48]	; 0x30
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:45 (discriminator 3)
    
    this_gpio->base_addr = base_addr;
    this_gpio->apb_bus_width = bus_width;
    
    /* Clear configuration. */
    for( i = 0, cfg_reg_addr = base_addr; i < NB_OF_GPIO; ++i )
 48e:	2337      	movs	r3, #55	; 0x37
 490:	18fb      	adds	r3, r7, r3
 492:	2237      	movs	r2, #55	; 0x37
 494:	18ba      	adds	r2, r7, r2
 496:	7812      	ldrb	r2, [r2, #0]
 498:	3201      	adds	r2, #1
 49a:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:45 (discriminator 1)
 49c:	2337      	movs	r3, #55	; 0x37
 49e:	18fb      	adds	r3, r7, r3
 4a0:	781b      	ldrb	r3, [r3, #0]
 4a2:	2b01      	cmp	r3, #1
 4a4:	d9eb      	bls.n	47e <GPIO_init+0x36>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:51
    {
        HW_set_8bit_reg( cfg_reg_addr, 0 );
        cfg_reg_addr += 4;
    }
    /* Clear any pending interrupts */
    switch( this_gpio->apb_bus_width )
 4a6:	68fb      	ldr	r3, [r7, #12]
 4a8:	791b      	ldrb	r3, [r3, #4]
 4aa:	2b01      	cmp	r3, #1
 4ac:	d00f      	beq.n	4ce <GPIO_init+0x86>
 4ae:	2b02      	cmp	r3, #2
 4b0:	d002      	beq.n	4b8 <GPIO_init+0x70>
 4b2:	2b00      	cmp	r3, #0
 4b4:	d01c      	beq.n	4f0 <GPIO_init+0xa8>
 4b6:	e038      	b.n	52a <GPIO_init+0xe2>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:54
    {
        case GPIO_APB_32_BITS_BUS:
            HAL_set_32bit_reg( this_gpio->base_addr, IRQ, CLEAR_ALL_IRQ32 );
 4b8:	68fb      	ldr	r3, [r7, #12]
 4ba:	681b      	ldr	r3, [r3, #0]
 4bc:	3380      	adds	r3, #128	; 0x80
 4be:	1c1a      	adds	r2, r3, #0
 4c0:	2301      	movs	r3, #1
 4c2:	425b      	negs	r3, r3
 4c4:	1c10      	adds	r0, r2, #0
 4c6:	1c19      	adds	r1, r3, #0
 4c8:	f7ff fdf0 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:55
            break;
 4cc:	e03d      	b.n	54a <GPIO_init+0x102>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:58
            
        case GPIO_APB_16_BITS_BUS:
            HAL_set_16bit_reg( this_gpio->base_addr, IRQ0, (uint16_t)CLEAR_ALL_IRQ16 );
 4ce:	68fb      	ldr	r3, [r7, #12]
 4d0:	681b      	ldr	r3, [r3, #0]
 4d2:	3380      	adds	r3, #128	; 0x80
 4d4:	4a1e      	ldr	r2, [pc, #120]	; (550 <GPIO_init+0x108>)
 4d6:	1c18      	adds	r0, r3, #0
 4d8:	1c11      	adds	r1, r2, #0
 4da:	f7ff fdf8 	bl	ce <HW_set_16bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:59
            HAL_set_16bit_reg( this_gpio->base_addr, IRQ1, (uint16_t)CLEAR_ALL_IRQ16 );
 4de:	68fb      	ldr	r3, [r7, #12]
 4e0:	681b      	ldr	r3, [r3, #0]
 4e2:	3384      	adds	r3, #132	; 0x84
 4e4:	4a1a      	ldr	r2, [pc, #104]	; (550 <GPIO_init+0x108>)
 4e6:	1c18      	adds	r0, r3, #0
 4e8:	1c11      	adds	r1, r2, #0
 4ea:	f7ff fdf0 	bl	ce <HW_set_16bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:60
            break;
 4ee:	e02c      	b.n	54a <GPIO_init+0x102>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:63
            
        case GPIO_APB_8_BITS_BUS:
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ0, (uint8_t)CLEAR_ALL_IRQ8 );
 4f0:	68fb      	ldr	r3, [r7, #12]
 4f2:	681b      	ldr	r3, [r3, #0]
 4f4:	3380      	adds	r3, #128	; 0x80
 4f6:	1c18      	adds	r0, r3, #0
 4f8:	21ff      	movs	r1, #255	; 0xff
 4fa:	f7ff fdf9 	bl	f0 <HW_set_8bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:64
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ1, (uint8_t)CLEAR_ALL_IRQ8 );
 4fe:	68fb      	ldr	r3, [r7, #12]
 500:	681b      	ldr	r3, [r3, #0]
 502:	3384      	adds	r3, #132	; 0x84
 504:	1c18      	adds	r0, r3, #0
 506:	21ff      	movs	r1, #255	; 0xff
 508:	f7ff fdf2 	bl	f0 <HW_set_8bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:65
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ2, (uint8_t)CLEAR_ALL_IRQ8 );
 50c:	68fb      	ldr	r3, [r7, #12]
 50e:	681b      	ldr	r3, [r3, #0]
 510:	3388      	adds	r3, #136	; 0x88
 512:	1c18      	adds	r0, r3, #0
 514:	21ff      	movs	r1, #255	; 0xff
 516:	f7ff fdeb 	bl	f0 <HW_set_8bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:66
            HAL_set_8bit_reg( this_gpio->base_addr, IRQ3, (uint8_t)CLEAR_ALL_IRQ8 );
 51a:	68fb      	ldr	r3, [r7, #12]
 51c:	681b      	ldr	r3, [r3, #0]
 51e:	338c      	adds	r3, #140	; 0x8c
 520:	1c18      	adds	r0, r3, #0
 522:	21ff      	movs	r1, #255	; 0xff
 524:	f7ff fde4 	bl	f0 <HW_set_8bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:67
            break;
 528:	e00f      	b.n	54a <GPIO_init+0x102>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:70
            
        default:
            HAL_ASSERT(0);
 52a:	2310      	movs	r3, #16
 52c:	18fb      	adds	r3, r7, r3
 52e:	4a09      	ldr	r2, [pc, #36]	; (554 <GPIO_init+0x10c>)
 530:	ca13      	ldmia	r2!, {r0, r1, r4}
 532:	c313      	stmia	r3!, {r0, r1, r4}
 534:	ca13      	ldmia	r2!, {r0, r1, r4}
 536:	c313      	stmia	r3!, {r0, r1, r4}
 538:	ca03      	ldmia	r2!, {r0, r1}
 53a:	c303      	stmia	r3!, {r0, r1}
 53c:	2310      	movs	r3, #16
 53e:	18fb      	adds	r3, r7, r3
 540:	1c18      	adds	r0, r3, #0
 542:	2146      	movs	r1, #70	; 0x46
 544:	f7ff fd9c 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:71
            break;
 548:	46c0      	nop			; (mov r8, r8)
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:73
    }
}
 54a:	46bd      	mov	sp, r7
 54c:	b00f      	add	sp, #60	; 0x3c
 54e:	bd90      	pop	{r4, r7, pc}
 550:	0000ffff 	.word	0x0000ffff
 554:	00000e14 	.word	0x00000e14

00000558 <GPIO_config>:
GPIO_config():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:85
(
    gpio_instance_t *   this_gpio,
    gpio_id_t           port_id,
    uint32_t            config
)
{
 558:	b590      	push	{r4, r7, lr}
 55a:	b08f      	sub	sp, #60	; 0x3c
 55c:	af00      	add	r7, sp, #0
 55e:	60f8      	str	r0, [r7, #12]
 560:	607a      	str	r2, [r7, #4]
 562:	230b      	movs	r3, #11
 564:	18fb      	adds	r3, r7, r3
 566:	1c0a      	adds	r2, r1, #0
 568:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:86
    HAL_ASSERT( port_id < NB_OF_GPIO );
 56a:	230b      	movs	r3, #11
 56c:	18fb      	adds	r3, r7, r3
 56e:	781b      	ldrb	r3, [r3, #0]
 570:	2b01      	cmp	r3, #1
 572:	d90e      	bls.n	592 <GPIO_config+0x3a>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:86 (discriminator 1)
 574:	2314      	movs	r3, #20
 576:	18fb      	adds	r3, r7, r3
 578:	4a12      	ldr	r2, [pc, #72]	; (5c4 <GPIO_config+0x6c>)
 57a:	ca13      	ldmia	r2!, {r0, r1, r4}
 57c:	c313      	stmia	r3!, {r0, r1, r4}
 57e:	ca13      	ldmia	r2!, {r0, r1, r4}
 580:	c313      	stmia	r3!, {r0, r1, r4}
 582:	ca03      	ldmia	r2!, {r0, r1}
 584:	c303      	stmia	r3!, {r0, r1}
 586:	2314      	movs	r3, #20
 588:	18fb      	adds	r3, r7, r3
 58a:	1c18      	adds	r0, r3, #0
 58c:	2156      	movs	r1, #86	; 0x56
 58e:	f7ff fd77 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:88
    
    if ( port_id < NB_OF_GPIO )
 592:	230b      	movs	r3, #11
 594:	18fb      	adds	r3, r7, r3
 596:	781b      	ldrb	r3, [r3, #0]
 598:	2b01      	cmp	r3, #1
 59a:	d810      	bhi.n	5be <GPIO_config+0x66>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:90
    {
        uint32_t cfg_reg_addr = this_gpio->base_addr;
 59c:	68fb      	ldr	r3, [r7, #12]
 59e:	681b      	ldr	r3, [r3, #0]
 5a0:	637b      	str	r3, [r7, #52]	; 0x34
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:91
        cfg_reg_addr += (port_id * 4);
 5a2:	230b      	movs	r3, #11
 5a4:	18fb      	adds	r3, r7, r3
 5a6:	781b      	ldrb	r3, [r3, #0]
 5a8:	009b      	lsls	r3, r3, #2
 5aa:	1c1a      	adds	r2, r3, #0
 5ac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 5ae:	189b      	adds	r3, r3, r2
 5b0:	637b      	str	r3, [r7, #52]	; 0x34
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:92
        HW_set_32bit_reg( cfg_reg_addr, config );
 5b2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 5b4:	687b      	ldr	r3, [r7, #4]
 5b6:	1c10      	adds	r0, r2, #0
 5b8:	1c19      	adds	r1, r3, #0
 5ba:	f7ff fd77 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:104
         * GPIO_init() was incorrect.
         */
        //line below is commente because of failure
     //   HAL_ASSERT( HW_get_32bit_reg( cfg_reg_addr ) == config );
    }
}
 5be:	46bd      	mov	sp, r7
 5c0:	b00f      	add	sp, #60	; 0x3c
 5c2:	bd90      	pop	{r4, r7, pc}
 5c4:	00000e14 	.word	0x00000e14

000005c8 <GPIO_set_output>:
GPIO_set_output():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:233
(
    gpio_instance_t *   this_gpio,
    gpio_id_t           port_id,
    uint8_t             value
)
{
 5c8:	b590      	push	{r4, r7, lr}
 5ca:	b08f      	sub	sp, #60	; 0x3c
 5cc:	af00      	add	r7, sp, #0
 5ce:	6078      	str	r0, [r7, #4]
 5d0:	1c08      	adds	r0, r1, #0
 5d2:	1c11      	adds	r1, r2, #0
 5d4:	1cfb      	adds	r3, r7, #3
 5d6:	1c02      	adds	r2, r0, #0
 5d8:	701a      	strb	r2, [r3, #0]
 5da:	1cbb      	adds	r3, r7, #2
 5dc:	1c0a      	adds	r2, r1, #0
 5de:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:234
    HAL_ASSERT( port_id < NB_OF_GPIO );
 5e0:	1cfb      	adds	r3, r7, #3
 5e2:	781b      	ldrb	r3, [r3, #0]
 5e4:	2b01      	cmp	r3, #1
 5e6:	d90e      	bls.n	606 <GPIO_set_output+0x3e>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:234 (discriminator 1)
 5e8:	2308      	movs	r3, #8
 5ea:	18fb      	adds	r3, r7, r3
 5ec:	4a8a      	ldr	r2, [pc, #552]	; (818 <MAIN_STACK_SIZE+0x18>)
 5ee:	ca13      	ldmia	r2!, {r0, r1, r4}
 5f0:	c313      	stmia	r3!, {r0, r1, r4}
 5f2:	ca13      	ldmia	r2!, {r0, r1, r4}
 5f4:	c313      	stmia	r3!, {r0, r1, r4}
 5f6:	ca03      	ldmia	r2!, {r0, r1}
 5f8:	c303      	stmia	r3!, {r0, r1}
 5fa:	2308      	movs	r3, #8
 5fc:	18fb      	adds	r3, r7, r3
 5fe:	1c18      	adds	r0, r3, #0
 600:	21ea      	movs	r1, #234	; 0xea
 602:	f7ff fd3d 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:237
    
            
    switch( this_gpio->apb_bus_width )
 606:	687b      	ldr	r3, [r7, #4]
 608:	791b      	ldrb	r3, [r3, #4]
 60a:	2b01      	cmp	r3, #1
 60c:	d02f      	beq.n	66e <GPIO_set_output+0xa6>
 60e:	2b02      	cmp	r3, #2
 610:	d003      	beq.n	61a <GPIO_set_output+0x52>
 612:	2b00      	cmp	r3, #0
 614:	d100      	bne.n	618 <GPIO_set_output+0x50>
 616:	e08a      	b.n	72e <GPIO_set_output+0x166>
 618:	e0e9      	b.n	7ee <GPIO_set_output+0x226>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:243
    {
        case GPIO_APB_32_BITS_BUS:
            {
                uint32_t outputs_state;
                
                outputs_state = HAL_get_32bit_reg( this_gpio->base_addr, GPIO_OUT );
 61a:	687b      	ldr	r3, [r7, #4]
 61c:	681b      	ldr	r3, [r3, #0]
 61e:	33a0      	adds	r3, #160	; 0xa0
 620:	1c18      	adds	r0, r3, #0
 622:	f7ff fd45 	bl	b0 <HW_get_32bit_reg>
 626:	1c03      	adds	r3, r0, #0
 628:	637b      	str	r3, [r7, #52]	; 0x34
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:244
                if ( 0 == value )
 62a:	1cbb      	adds	r3, r7, #2
 62c:	781b      	ldrb	r3, [r3, #0]
 62e:	2b00      	cmp	r3, #0
 630:	d10a      	bne.n	648 <GPIO_set_output+0x80>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:246
                {
                    outputs_state &= ~(1 << port_id);
 632:	1cfb      	adds	r3, r7, #3
 634:	781b      	ldrb	r3, [r3, #0]
 636:	2201      	movs	r2, #1
 638:	409a      	lsls	r2, r3
 63a:	1c13      	adds	r3, r2, #0
 63c:	43db      	mvns	r3, r3
 63e:	1c1a      	adds	r2, r3, #0
 640:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 642:	4013      	ands	r3, r2
 644:	637b      	str	r3, [r7, #52]	; 0x34
 646:	e008      	b.n	65a <GPIO_set_output+0x92>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:250
                }
                else
                {
                    outputs_state |= 1 << port_id;
 648:	1cfb      	adds	r3, r7, #3
 64a:	781b      	ldrb	r3, [r3, #0]
 64c:	2201      	movs	r2, #1
 64e:	409a      	lsls	r2, r3
 650:	1c13      	adds	r3, r2, #0
 652:	1c1a      	adds	r2, r3, #0
 654:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 656:	4313      	orrs	r3, r2
 658:	637b      	str	r3, [r7, #52]	; 0x34
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:252
                }
                HAL_set_32bit_reg( this_gpio->base_addr, GPIO_OUT, outputs_state );
 65a:	687b      	ldr	r3, [r7, #4]
 65c:	681b      	ldr	r3, [r3, #0]
 65e:	33a0      	adds	r3, #160	; 0xa0
 660:	1c1a      	adds	r2, r3, #0
 662:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 664:	1c10      	adds	r0, r2, #0
 666:	1c19      	adds	r1, r3, #0
 668:	f7ff fd20 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:263
                 * It may also indicate that the base address or APB bus width passed as
                 * parameter to the GPIO_init() function do not match the hardware design.
                 */
               // HAL_ASSERT( HAL_get_32bit_reg( this_gpio->base_addr, GPIO_OUT ) == outputs_state );
            }
            break;
 66c:	e0d1      	b.n	812 <MAIN_STACK_SIZE+0x12>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:268
            
        case GPIO_APB_16_BITS_BUS:
            {
                uint16_t outputs_state;
                uint32_t gpio_out_reg_addr = this_gpio->base_addr + GPIO_OUT_REG_OFFSET + ((port_id >> 4) * 4);
 66e:	687b      	ldr	r3, [r7, #4]
 670:	681b      	ldr	r3, [r3, #0]
 672:	1cfa      	adds	r2, r7, #3
 674:	7812      	ldrb	r2, [r2, #0]
 676:	0912      	lsrs	r2, r2, #4
 678:	b2d2      	uxtb	r2, r2
 67a:	0092      	lsls	r2, r2, #2
 67c:	189b      	adds	r3, r3, r2
 67e:	33a0      	adds	r3, #160	; 0xa0
 680:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:270
                
                outputs_state = HW_get_16bit_reg( gpio_out_reg_addr );
 682:	2332      	movs	r3, #50	; 0x32
 684:	18fc      	adds	r4, r7, r3
 686:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 688:	1c18      	adds	r0, r3, #0
 68a:	f7ff fd22 	bl	d2 <HW_get_16bit_reg>
 68e:	1c03      	adds	r3, r0, #0
 690:	8023      	strh	r3, [r4, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:271
                if ( 0 == value )
 692:	1cbb      	adds	r3, r7, #2
 694:	781b      	ldrb	r3, [r3, #0]
 696:	2b00      	cmp	r3, #0
 698:	d113      	bne.n	6c2 <GPIO_set_output+0xfa>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:273
                {
                    outputs_state &= ~(1 << (port_id & 0x0F));
 69a:	1cfb      	adds	r3, r7, #3
 69c:	781b      	ldrb	r3, [r3, #0]
 69e:	220f      	movs	r2, #15
 6a0:	4013      	ands	r3, r2
 6a2:	2201      	movs	r2, #1
 6a4:	409a      	lsls	r2, r3
 6a6:	1c13      	adds	r3, r2, #0
 6a8:	b29b      	uxth	r3, r3
 6aa:	43db      	mvns	r3, r3
 6ac:	b299      	uxth	r1, r3
 6ae:	2332      	movs	r3, #50	; 0x32
 6b0:	18fb      	adds	r3, r7, r3
 6b2:	881a      	ldrh	r2, [r3, #0]
 6b4:	1c0b      	adds	r3, r1, #0
 6b6:	4013      	ands	r3, r2
 6b8:	b29a      	uxth	r2, r3
 6ba:	2332      	movs	r3, #50	; 0x32
 6bc:	18fb      	adds	r3, r7, r3
 6be:	801a      	strh	r2, [r3, #0]
 6c0:	e00f      	b.n	6e2 <GPIO_set_output+0x11a>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:277
                }
                else
                {
                    outputs_state |= 1 << (port_id & 0x0F);
 6c2:	1cfb      	adds	r3, r7, #3
 6c4:	781b      	ldrb	r3, [r3, #0]
 6c6:	220f      	movs	r2, #15
 6c8:	4013      	ands	r3, r2
 6ca:	2201      	movs	r2, #1
 6cc:	409a      	lsls	r2, r3
 6ce:	1c13      	adds	r3, r2, #0
 6d0:	b29a      	uxth	r2, r3
 6d2:	2332      	movs	r3, #50	; 0x32
 6d4:	18fb      	adds	r3, r7, r3
 6d6:	881b      	ldrh	r3, [r3, #0]
 6d8:	4313      	orrs	r3, r2
 6da:	b29a      	uxth	r2, r3
 6dc:	2332      	movs	r3, #50	; 0x32
 6de:	18fb      	adds	r3, r7, r3
 6e0:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:279
                }
                HW_set_16bit_reg( gpio_out_reg_addr, outputs_state );
 6e2:	2332      	movs	r3, #50	; 0x32
 6e4:	18fb      	adds	r3, r7, r3
 6e6:	881b      	ldrh	r3, [r3, #0]
 6e8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 6ea:	1c10      	adds	r0, r2, #0
 6ec:	1c19      	adds	r1, r3, #0
 6ee:	f7ff fcee 	bl	ce <HW_set_16bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:288
                 * the expected value may indicate that some of the GPIOs may not exist due to
                 * the number of GPIOs selected in the CoreGPIO hardware flow configuration.
                 * It may also indicate that the base address or APB bus width passed as
                 * parameter to the GPIO_init() function do not match the hardware design.
                 */
                HAL_ASSERT( HW_get_16bit_reg( gpio_out_reg_addr ) == outputs_state );
 6f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 6f4:	1c18      	adds	r0, r3, #0
 6f6:	f7ff fcec 	bl	d2 <HW_get_16bit_reg>
 6fa:	1c03      	adds	r3, r0, #0
 6fc:	1c1a      	adds	r2, r3, #0
 6fe:	2332      	movs	r3, #50	; 0x32
 700:	18fb      	adds	r3, r7, r3
 702:	881b      	ldrh	r3, [r3, #0]
 704:	4293      	cmp	r3, r2
 706:	d011      	beq.n	72c <GPIO_set_output+0x164>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:288 (discriminator 1)
 708:	2308      	movs	r3, #8
 70a:	18fb      	adds	r3, r7, r3
 70c:	4a42      	ldr	r2, [pc, #264]	; (818 <MAIN_STACK_SIZE+0x18>)
 70e:	ca13      	ldmia	r2!, {r0, r1, r4}
 710:	c313      	stmia	r3!, {r0, r1, r4}
 712:	ca13      	ldmia	r2!, {r0, r1, r4}
 714:	c313      	stmia	r3!, {r0, r1, r4}
 716:	ca03      	ldmia	r2!, {r0, r1}
 718:	c303      	stmia	r3!, {r0, r1}
 71a:	2308      	movs	r3, #8
 71c:	18fa      	adds	r2, r7, r3
 71e:	2390      	movs	r3, #144	; 0x90
 720:	005b      	lsls	r3, r3, #1
 722:	1c10      	adds	r0, r2, #0
 724:	1c19      	adds	r1, r3, #0
 726:	f7ff fcab 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:290 (discriminator 1)
            }
            break;
 72a:	e072      	b.n	812 <MAIN_STACK_SIZE+0x12>
 72c:	e071      	b.n	812 <MAIN_STACK_SIZE+0x12>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:295
            
        case GPIO_APB_8_BITS_BUS:
            {
                uint8_t outputs_state;
                uint32_t gpio_out_reg_addr = this_gpio->base_addr + GPIO_OUT_REG_OFFSET + ((port_id >> 3) * 4);
 72e:	687b      	ldr	r3, [r7, #4]
 730:	681b      	ldr	r3, [r3, #0]
 732:	1cfa      	adds	r2, r7, #3
 734:	7812      	ldrb	r2, [r2, #0]
 736:	08d2      	lsrs	r2, r2, #3
 738:	b2d2      	uxtb	r2, r2
 73a:	0092      	lsls	r2, r2, #2
 73c:	189b      	adds	r3, r3, r2
 73e:	33a0      	adds	r3, #160	; 0xa0
 740:	62bb      	str	r3, [r7, #40]	; 0x28
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:297
                
                outputs_state = HW_get_8bit_reg( gpio_out_reg_addr );
 742:	2331      	movs	r3, #49	; 0x31
 744:	18fc      	adds	r4, r7, r3
 746:	6abb      	ldr	r3, [r7, #40]	; 0x28
 748:	1c18      	adds	r0, r3, #0
 74a:	f7ff fcd3 	bl	f4 <HW_get_8bit_reg>
 74e:	1c03      	adds	r3, r0, #0
 750:	7023      	strb	r3, [r4, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:298
                if ( 0 == value )
 752:	1cbb      	adds	r3, r7, #2
 754:	781b      	ldrb	r3, [r3, #0]
 756:	2b00      	cmp	r3, #0
 758:	d113      	bne.n	782 <GPIO_set_output+0x1ba>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:300
                {
                    outputs_state &= ~(1 << (port_id & 0x07));
 75a:	1cfb      	adds	r3, r7, #3
 75c:	781b      	ldrb	r3, [r3, #0]
 75e:	2207      	movs	r2, #7
 760:	4013      	ands	r3, r2
 762:	2201      	movs	r2, #1
 764:	409a      	lsls	r2, r3
 766:	1c13      	adds	r3, r2, #0
 768:	b2db      	uxtb	r3, r3
 76a:	43db      	mvns	r3, r3
 76c:	b2d9      	uxtb	r1, r3
 76e:	2331      	movs	r3, #49	; 0x31
 770:	18fb      	adds	r3, r7, r3
 772:	781a      	ldrb	r2, [r3, #0]
 774:	1c0b      	adds	r3, r1, #0
 776:	4013      	ands	r3, r2
 778:	b2da      	uxtb	r2, r3
 77a:	2331      	movs	r3, #49	; 0x31
 77c:	18fb      	adds	r3, r7, r3
 77e:	701a      	strb	r2, [r3, #0]
 780:	e00f      	b.n	7a2 <GPIO_set_output+0x1da>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:304
                }
                else
                {
                    outputs_state |= 1 << (port_id & 0x07);
 782:	1cfb      	adds	r3, r7, #3
 784:	781b      	ldrb	r3, [r3, #0]
 786:	2207      	movs	r2, #7
 788:	4013      	ands	r3, r2
 78a:	2201      	movs	r2, #1
 78c:	409a      	lsls	r2, r3
 78e:	1c13      	adds	r3, r2, #0
 790:	b2da      	uxtb	r2, r3
 792:	2331      	movs	r3, #49	; 0x31
 794:	18fb      	adds	r3, r7, r3
 796:	781b      	ldrb	r3, [r3, #0]
 798:	4313      	orrs	r3, r2
 79a:	b2da      	uxtb	r2, r3
 79c:	2331      	movs	r3, #49	; 0x31
 79e:	18fb      	adds	r3, r7, r3
 7a0:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:306
                }
                HW_set_8bit_reg( gpio_out_reg_addr, outputs_state );
 7a2:	2331      	movs	r3, #49	; 0x31
 7a4:	18fb      	adds	r3, r7, r3
 7a6:	781b      	ldrb	r3, [r3, #0]
 7a8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 7aa:	1c10      	adds	r0, r2, #0
 7ac:	1c19      	adds	r1, r3, #0
 7ae:	f7ff fc9f 	bl	f0 <HW_set_8bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:315
                 * the expected value may indicate that some of the GPIOs may not exist due to
                 * the number of GPIOs selected in the CoreGPIO hardware flow configuration.
                 * It may also indicate that the base address or APB bus width passed as
                 * parameter to the GPIO_init() function do not match the hardware design.
                 */
                HAL_ASSERT( HW_get_8bit_reg( gpio_out_reg_addr ) == outputs_state );
 7b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 7b4:	1c18      	adds	r0, r3, #0
 7b6:	f7ff fc9d 	bl	f4 <HW_get_8bit_reg>
 7ba:	1c03      	adds	r3, r0, #0
 7bc:	1c1a      	adds	r2, r3, #0
 7be:	2331      	movs	r3, #49	; 0x31
 7c0:	18fb      	adds	r3, r7, r3
 7c2:	781b      	ldrb	r3, [r3, #0]
 7c4:	4293      	cmp	r3, r2
 7c6:	d011      	beq.n	7ec <GPIO_set_output+0x224>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:315 (discriminator 1)
 7c8:	2308      	movs	r3, #8
 7ca:	18fb      	adds	r3, r7, r3
 7cc:	4a12      	ldr	r2, [pc, #72]	; (818 <MAIN_STACK_SIZE+0x18>)
 7ce:	ca13      	ldmia	r2!, {r0, r1, r4}
 7d0:	c313      	stmia	r3!, {r0, r1, r4}
 7d2:	ca13      	ldmia	r2!, {r0, r1, r4}
 7d4:	c313      	stmia	r3!, {r0, r1, r4}
 7d6:	ca03      	ldmia	r2!, {r0, r1}
 7d8:	c303      	stmia	r3!, {r0, r1}
 7da:	2308      	movs	r3, #8
 7dc:	18fa      	adds	r2, r7, r3
 7de:	233c      	movs	r3, #60	; 0x3c
 7e0:	33ff      	adds	r3, #255	; 0xff
 7e2:	1c10      	adds	r0, r2, #0
 7e4:	1c19      	adds	r1, r3, #0
 7e6:	f7ff fc4b 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:317 (discriminator 1)
            }
            break;
 7ea:	e012      	b.n	812 <MAIN_STACK_SIZE+0x12>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:317 (discriminator 2)
 7ec:	e011      	b.n	812 <MAIN_STACK_SIZE+0x12>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:320
            
        default:
            HAL_ASSERT(0);
 7ee:	2308      	movs	r3, #8
 7f0:	18fb      	adds	r3, r7, r3
 7f2:	4a09      	ldr	r2, [pc, #36]	; (818 <MAIN_STACK_SIZE+0x18>)
 7f4:	ca13      	ldmia	r2!, {r0, r1, r4}
 7f6:	c313      	stmia	r3!, {r0, r1, r4}
 7f8:	ca13      	ldmia	r2!, {r0, r1, r4}
 7fa:	c313      	stmia	r3!, {r0, r1, r4}
 7fc:	ca03      	ldmia	r2!, {r0, r1}
 7fe:	c303      	stmia	r3!, {r0, r1}
 800:	2308      	movs	r3, #8
 802:	18fa      	adds	r2, r7, r3
 804:	23a0      	movs	r3, #160	; 0xa0
 806:	005b      	lsls	r3, r3, #1
 808:	1c10      	adds	r0, r2, #0
 80a:	1c19      	adds	r1, r3, #0
 80c:	f7ff fc38 	bl	80 <HAL_assert_fail>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:321
            break;
 810:	46c0      	nop			; (mov r8, r8)
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreGPIO/core_gpio.c:323
    }
}
 812:	46bd      	mov	sp, r7
 814:	b00f      	add	sp, #60	; 0x3c
 816:	bd90      	pop	{r4, r7, pc}
 818:	00000e14 	.word	0x00000e14

0000081c <BRM_Reset>:
BRM_Reset():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:8
#include "../../hal/hal_assert.h"
#include <time.h>
#include <stdio.h>

void BRM_Reset (addr_t base_addr)
{
 81c:	b580      	push	{r7, lr}
 81e:	b084      	sub	sp, #16
 820:	af00      	add	r7, sp, #0
 822:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:9
	addr_t cfg_reg_addr = base_addr;
 824:	687b      	ldr	r3, [r7, #4]
 826:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:10
	uint8_t i = 0;
 828:	230b      	movs	r3, #11
 82a:	18fb      	adds	r3, r7, r3
 82c:	2200      	movs	r2, #0
 82e:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:13

	/* Pulse Reset Line */
	HW_set_32bit_reg(cfg_reg_addr, 0x2);
 830:	68fb      	ldr	r3, [r7, #12]
 832:	1c18      	adds	r0, r3, #0
 834:	2102      	movs	r1, #2
 836:	f7ff fc39 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:14
	HW_set_32bit_reg(cfg_reg_addr+4, 0xf);
 83a:	68fb      	ldr	r3, [r7, #12]
 83c:	3304      	adds	r3, #4
 83e:	1c18      	adds	r0, r3, #0
 840:	210f      	movs	r1, #15
 842:	f7ff fc33 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:17

	/* Bring out of reset */
	HW_set_32bit_reg(cfg_reg_addr, 0x3);
 846:	68fb      	ldr	r3, [r7, #12]
 848:	1c18      	adds	r0, r3, #0
 84a:	2103      	movs	r1, #3
 84c:	f7ff fc2e 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:20

	/* wait for reset completion flag */
	while ((HW_get_32bit_reg(cfg_reg_addr+4) & 0x1) == 0)
 850:	46c0      	nop			; (mov r8, r8)
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:20 (discriminator 1)
 852:	68fb      	ldr	r3, [r7, #12]
 854:	3304      	adds	r3, #4
 856:	1c18      	adds	r0, r3, #0
 858:	f7ff fc2a 	bl	b0 <HW_get_32bit_reg>
 85c:	1c02      	adds	r2, r0, #0
 85e:	2301      	movs	r3, #1
 860:	4013      	ands	r3, r2
 862:	d0f6      	beq.n	852 <BRM_Reset+0x36>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:24
	{
      /* loop until completion */
	}
	HW_set_32bit_reg(cfg_reg_addr+4, 0xf);
 864:	68fb      	ldr	r3, [r7, #12]
 866:	3304      	adds	r3, #4
 868:	1c18      	adds	r0, r3, #0
 86a:	210f      	movs	r1, #15
 86c:	f7ff fc1e 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:25
}
 870:	46bd      	mov	sp, r7
 872:	b004      	add	sp, #16
 874:	bd80      	pop	{r7, pc}
 876:	46c0      	nop			; (mov r8, r8)

00000878 <BRMReg_Config>:
BRMReg_Config():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:30
 


void BRMReg_Config (addr_t base_addr)
{
 878:	b580      	push	{r7, lr}
 87a:	b084      	sub	sp, #16
 87c:	af00      	add	r7, sp, #0
 87e:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:31
	addr_t cfg_reg_addr = base_addr;
 880:	687b      	ldr	r3, [r7, #4]
 882:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:32
	uint8_t i = 0;
 884:	230b      	movs	r3, #11
 886:	18fb      	adds	r3, r7, r3
 888:	2200      	movs	r2, #0
 88a:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:49
9	1553A/B Status Word
10	Initialization Count
*/

	/* Clear configuration registers */
	for(i = 0, cfg_reg_addr = base_addr; i < 10; ++i )
 88c:	230b      	movs	r3, #11
 88e:	18fb      	adds	r3, r7, r3
 890:	2200      	movs	r2, #0
 892:	701a      	strb	r2, [r3, #0]
 894:	687b      	ldr	r3, [r7, #4]
 896:	60fb      	str	r3, [r7, #12]
 898:	e00e      	b.n	8b8 <BRMReg_Config+0x40>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:51 (discriminator 3)
	{
		HW_set_32bit_reg(cfg_reg_addr, 0);
 89a:	68fb      	ldr	r3, [r7, #12]
 89c:	1c18      	adds	r0, r3, #0
 89e:	2100      	movs	r1, #0
 8a0:	f7ff fc04 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:52 (discriminator 3)
		cfg_reg_addr += 4;
 8a4:	68fb      	ldr	r3, [r7, #12]
 8a6:	3304      	adds	r3, #4
 8a8:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:49 (discriminator 3)
9	1553A/B Status Word
10	Initialization Count
*/

	/* Clear configuration registers */
	for(i = 0, cfg_reg_addr = base_addr; i < 10; ++i )
 8aa:	230b      	movs	r3, #11
 8ac:	18fb      	adds	r3, r7, r3
 8ae:	220b      	movs	r2, #11
 8b0:	18ba      	adds	r2, r7, r2
 8b2:	7812      	ldrb	r2, [r2, #0]
 8b4:	3201      	adds	r2, #1
 8b6:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:49 (discriminator 1)
 8b8:	230b      	movs	r3, #11
 8ba:	18fb      	adds	r3, r7, r3
 8bc:	781b      	ldrb	r3, [r3, #0]
 8be:	2b09      	cmp	r3, #9
 8c0:	d9eb      	bls.n	89a <BRMReg_Config+0x22>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:56
		HW_set_32bit_reg(cfg_reg_addr, 0);
		cfg_reg_addr += 4;
	}
	
	/* Configuration as Bus Controller */
	HW_set_32bit_reg(base_addr+(CtrlReg*4), BRMREG0); /* Control Register */
 8c2:	687a      	ldr	r2, [r7, #4]
 8c4:	2384      	movs	r3, #132	; 0x84
 8c6:	009b      	lsls	r3, r3, #2
 8c8:	1c10      	adds	r0, r2, #0
 8ca:	1c19      	adds	r1, r3, #0
 8cc:	f7ff fbee 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:57
	HW_set_32bit_reg(base_addr+(OprnSts*4), BRMREG1); /* Operation and Status */
 8d0:	687b      	ldr	r3, [r7, #4]
 8d2:	3304      	adds	r3, #4
 8d4:	1c18      	adds	r0, r3, #0
 8d6:	2100      	movs	r1, #0
 8d8:	f7ff fbe8 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:58
	HW_set_32bit_reg(base_addr+(IntrptMask*4), BRMREG3); /* Interrupt Mask */
 8dc:	687b      	ldr	r3, [r7, #4]
 8de:	330c      	adds	r3, #12
 8e0:	4a0b      	ldr	r2, [pc, #44]	; (910 <BRMReg_Config+0x98>)
 8e2:	1c18      	adds	r0, r3, #0
 8e4:	1c11      	adds	r1, r2, #0
 8e6:	f7ff fbe1 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:59
	HW_set_32bit_reg(base_addr+(IntrptPtr*4), BRMREG5); /* Interrupt Pointer */
 8ea:	687b      	ldr	r3, [r7, #4]
 8ec:	3314      	adds	r3, #20
 8ee:	1c1a      	adds	r2, r3, #0
 8f0:	2381      	movs	r3, #129	; 0x81
 8f2:	021b      	lsls	r3, r3, #8
 8f4:	1c10      	adds	r0, r2, #0
 8f6:	1c19      	adds	r1, r3, #0
 8f8:	f7ff fbd8 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:60
	HW_set_32bit_reg(base_addr+(CmdBlkPtr*4), BRMREG8); /* Command Block Pointer */
 8fc:	687b      	ldr	r3, [r7, #4]
 8fe:	3320      	adds	r3, #32
 900:	1c18      	adds	r0, r3, #0
 902:	2100      	movs	r1, #0
 904:	f7ff fbd2 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:61
}
 908:	46bd      	mov	sp, r7
 90a:	b004      	add	sp, #16
 90c:	bd80      	pop	{r7, pc}
 90e:	46c0      	nop			; (mov r8, r8)
 910:	0000ffff 	.word	0x0000ffff

00000914 <BRM_get_Cmd_Wrd>:
BRM_get_Cmd_Wrd():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:71
uint16_t RtAdd,
uint16_t SubAdd,
uint16_t RxTx,
uint16_t WordCnt
)
{
 914:	b5b0      	push	{r4, r5, r7, lr}
 916:	b084      	sub	sp, #16
 918:	af00      	add	r7, sp, #0
 91a:	1c05      	adds	r5, r0, #0
 91c:	1c0c      	adds	r4, r1, #0
 91e:	1c10      	adds	r0, r2, #0
 920:	1c19      	adds	r1, r3, #0
 922:	1dbb      	adds	r3, r7, #6
 924:	1c2a      	adds	r2, r5, #0
 926:	801a      	strh	r2, [r3, #0]
 928:	1d3b      	adds	r3, r7, #4
 92a:	1c22      	adds	r2, r4, #0
 92c:	801a      	strh	r2, [r3, #0]
 92e:	1cbb      	adds	r3, r7, #2
 930:	1c02      	adds	r2, r0, #0
 932:	801a      	strh	r2, [r3, #0]
 934:	1c3b      	adds	r3, r7, #0
 936:	1c0a      	adds	r2, r1, #0
 938:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:72
	uint16_t CmdWrd = 0;
 93a:	230e      	movs	r3, #14
 93c:	18fb      	adds	r3, r7, r3
 93e:	2200      	movs	r2, #0
 940:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:76
	/* B15 B14 B13 B12 B11  B10  B9 B8 B7 B6 B5  B4   B3   B2   B1   B0
	   |-----RT ADDRESS--| |T/R| | SUB-ADDRESS|  |WORD COUNT/MODE CODE| */
	
	CmdWrd = CmdWrd | WordCnt;
 942:	230e      	movs	r3, #14
 944:	18fb      	adds	r3, r7, r3
 946:	220e      	movs	r2, #14
 948:	18b9      	adds	r1, r7, r2
 94a:	1c3a      	adds	r2, r7, #0
 94c:	8809      	ldrh	r1, [r1, #0]
 94e:	8812      	ldrh	r2, [r2, #0]
 950:	430a      	orrs	r2, r1
 952:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:77
	CmdWrd = CmdWrd | (SubAdd << 5);
 954:	1d3b      	adds	r3, r7, #4
 956:	881b      	ldrh	r3, [r3, #0]
 958:	015b      	lsls	r3, r3, #5
 95a:	b29a      	uxth	r2, r3
 95c:	230e      	movs	r3, #14
 95e:	18fb      	adds	r3, r7, r3
 960:	881b      	ldrh	r3, [r3, #0]
 962:	4313      	orrs	r3, r2
 964:	b29a      	uxth	r2, r3
 966:	230e      	movs	r3, #14
 968:	18fb      	adds	r3, r7, r3
 96a:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:78
    CmdWrd = CmdWrd | (RxTx << 10);
 96c:	1cbb      	adds	r3, r7, #2
 96e:	881b      	ldrh	r3, [r3, #0]
 970:	029b      	lsls	r3, r3, #10
 972:	b29a      	uxth	r2, r3
 974:	230e      	movs	r3, #14
 976:	18fb      	adds	r3, r7, r3
 978:	881b      	ldrh	r3, [r3, #0]
 97a:	4313      	orrs	r3, r2
 97c:	b29a      	uxth	r2, r3
 97e:	230e      	movs	r3, #14
 980:	18fb      	adds	r3, r7, r3
 982:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:79
    CmdWrd = CmdWrd | (RtAdd << 11);
 984:	1dbb      	adds	r3, r7, #6
 986:	881b      	ldrh	r3, [r3, #0]
 988:	02db      	lsls	r3, r3, #11
 98a:	b29a      	uxth	r2, r3
 98c:	230e      	movs	r3, #14
 98e:	18fb      	adds	r3, r7, r3
 990:	881b      	ldrh	r3, [r3, #0]
 992:	4313      	orrs	r3, r2
 994:	b29a      	uxth	r2, r3
 996:	230e      	movs	r3, #14
 998:	18fb      	adds	r3, r7, r3
 99a:	801a      	strh	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:80
    return CmdWrd;		
 99c:	230e      	movs	r3, #14
 99e:	18fb      	adds	r3, r7, r3
 9a0:	881b      	ldrh	r3, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:81
}
 9a2:	1c18      	adds	r0, r3, #0
 9a4:	46bd      	mov	sp, r7
 9a6:	b004      	add	sp, #16
 9a8:	bdb0      	pop	{r4, r5, r7, pc}
 9aa:	46c0      	nop			; (mov r8, r8)

000009ac <BRMCmdBlk_Config>:
BRMCmdBlk_Config():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:86

void BRMCmdBlk_Config (
		addr_t base_addr
		)
	{
 9ac:	b590      	push	{r4, r7, lr}
 9ae:	b087      	sub	sp, #28
 9b0:	af00      	add	r7, sp, #0
 9b2:	6078      	str	r0, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:87
	addr_t cfg_reg_addr = base_addr;
 9b4:	687b      	ldr	r3, [r7, #4]
 9b6:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:88
	uint8_t i = 0;
 9b8:	2313      	movs	r3, #19
 9ba:	18fb      	adds	r3, r7, r3
 9bc:	2200      	movs	r2, #0
 9be:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:92
	uint16_t tccmd, tm1cmd, tm2cmd;

	/* Control Word Setting */
	cfg_reg_addr = base_addr + (4*CTRLWRD);
 9c0:	687b      	ldr	r3, [r7, #4]
 9c2:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:93
	for(i = 0, cfg_reg_addr = base_addr; i < EOL; ++i )
 9c4:	2313      	movs	r3, #19
 9c6:	18fb      	adds	r3, r7, r3
 9c8:	2200      	movs	r2, #0
 9ca:	701a      	strb	r2, [r3, #0]
 9cc:	687b      	ldr	r3, [r7, #4]
 9ce:	617b      	str	r3, [r7, #20]
 9d0:	e010      	b.n	9f4 <BRMCmdBlk_Config+0x48>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:95 (discriminator 3)
		{
		HW_set_32bit_reg(cfg_reg_addr, 0x2600); //Opcode for all command words set as GOTO and branch
 9d2:	697a      	ldr	r2, [r7, #20]
 9d4:	2398      	movs	r3, #152	; 0x98
 9d6:	019b      	lsls	r3, r3, #6
 9d8:	1c10      	adds	r0, r2, #0
 9da:	1c19      	adds	r1, r3, #0
 9dc:	f7ff fb66 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:96 (discriminator 3)
			cfg_reg_addr += CMDBLKWIDTH*4;
 9e0:	697b      	ldr	r3, [r7, #20]
 9e2:	3320      	adds	r3, #32
 9e4:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:93 (discriminator 3)
	uint8_t i = 0;
	uint16_t tccmd, tm1cmd, tm2cmd;

	/* Control Word Setting */
	cfg_reg_addr = base_addr + (4*CTRLWRD);
	for(i = 0, cfg_reg_addr = base_addr; i < EOL; ++i )
 9e6:	2313      	movs	r3, #19
 9e8:	18fb      	adds	r3, r7, r3
 9ea:	2213      	movs	r2, #19
 9ec:	18ba      	adds	r2, r7, r2
 9ee:	7812      	ldrb	r2, [r2, #0]
 9f0:	3201      	adds	r2, #1
 9f2:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:93 (discriminator 1)
 9f4:	2313      	movs	r3, #19
 9f6:	18fb      	adds	r3, r7, r3
 9f8:	781b      	ldrb	r3, [r3, #0]
 9fa:	2b06      	cmp	r3, #6
 9fc:	d9e9      	bls.n	9d2 <BRMCmdBlk_Config+0x26>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:98
		{
		HW_set_32bit_reg(cfg_reg_addr, 0x2600); //Opcode for all command words set as GOTO and branch
			cfg_reg_addr += CMDBLKWIDTH*4;
		}
	HW_set_32bit_reg(cfg_reg_addr, 0x0600); //Opcode for last command block is set as EOL
 9fe:	697a      	ldr	r2, [r7, #20]
 a00:	23c0      	movs	r3, #192	; 0xc0
 a02:	00db      	lsls	r3, r3, #3
 a04:	1c10      	adds	r0, r2, #0
 a06:	1c19      	adds	r1, r3, #0
 a08:	f7ff fb50 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:101

	/* Branch Address */
	cfg_reg_addr = base_addr + (4*BRNCHADD);//24;
 a0c:	687b      	ldr	r3, [r7, #4]
 a0e:	3318      	adds	r3, #24
 a10:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:103

	for(i = 0; i < EOL; ++i )
 a12:	2313      	movs	r3, #19
 a14:	18fb      	adds	r3, r7, r3
 a16:	2200      	movs	r2, #0
 a18:	701a      	strb	r2, [r3, #0]
 a1a:	e014      	b.n	a46 <BRMCmdBlk_Config+0x9a>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:105 (discriminator 3)
	{
		HW_set_32bit_reg(cfg_reg_addr, 0x8+(CMDBLKWIDTH*i));
 a1c:	2313      	movs	r3, #19
 a1e:	18fb      	adds	r3, r7, r3
 a20:	781b      	ldrb	r3, [r3, #0]
 a22:	3301      	adds	r3, #1
 a24:	00db      	lsls	r3, r3, #3
 a26:	1c1a      	adds	r2, r3, #0
 a28:	697b      	ldr	r3, [r7, #20]
 a2a:	1c18      	adds	r0, r3, #0
 a2c:	1c11      	adds	r1, r2, #0
 a2e:	f7ff fb3d 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:106 (discriminator 3)
		cfg_reg_addr += CMDBLKWIDTH*4;//32;
 a32:	697b      	ldr	r3, [r7, #20]
 a34:	3320      	adds	r3, #32
 a36:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:103 (discriminator 3)
	HW_set_32bit_reg(cfg_reg_addr, 0x0600); //Opcode for last command block is set as EOL

	/* Branch Address */
	cfg_reg_addr = base_addr + (4*BRNCHADD);//24;

	for(i = 0; i < EOL; ++i )
 a38:	2313      	movs	r3, #19
 a3a:	18fb      	adds	r3, r7, r3
 a3c:	2213      	movs	r2, #19
 a3e:	18ba      	adds	r2, r7, r2
 a40:	7812      	ldrb	r2, [r2, #0]
 a42:	3201      	adds	r2, #1
 a44:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:103 (discriminator 1)
 a46:	2313      	movs	r3, #19
 a48:	18fb      	adds	r3, r7, r3
 a4a:	781b      	ldrb	r3, [r3, #0]
 a4c:	2b06      	cmp	r3, #6
 a4e:	d9e5      	bls.n	a1c <BRMCmdBlk_Config+0x70>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:112
	}
    /* Command Word */
	
	// B15 B14 B13 B12 B11  B10  B9 B8 B7 B6 B5  B4   B3   B2   B1  B0
	// |-----RT ADDRESS--| |T/R| | SUB-ADDRESS|  |WORD COUNT/MODE CODE|
	cfg_reg_addr = base_addr + (4*CMDWRD1) + (CMDBLKWIDTH*4*TC1); // Command Block for TC
 a50:	687b      	ldr	r3, [r7, #4]
 a52:	3304      	adds	r3, #4
 a54:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:113
	tccmd = BRM_get_Cmd_Wrd(RTADD,1,0,TCWRDCNT);
 a56:	2310      	movs	r3, #16
 a58:	18fc      	adds	r4, r7, r3
 a5a:	2009      	movs	r0, #9
 a5c:	2101      	movs	r1, #1
 a5e:	2200      	movs	r2, #0
 a60:	2303      	movs	r3, #3
 a62:	f7ff ff57 	bl	914 <BRM_get_Cmd_Wrd>
 a66:	1c03      	adds	r3, r0, #0
 a68:	8023      	strh	r3, [r4, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:114
	HW_set_32bit_reg(cfg_reg_addr, tccmd);
 a6a:	2310      	movs	r3, #16
 a6c:	18fb      	adds	r3, r7, r3
 a6e:	881b      	ldrh	r3, [r3, #0]
 a70:	697a      	ldr	r2, [r7, #20]
 a72:	1c10      	adds	r0, r2, #0
 a74:	1c19      	adds	r1, r3, #0
 a76:	f7ff fb19 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:117
	
	//HW_set_32bit_reg(cfg_reg_addr, 0x4823); // RT Add:9, SA1, RX, WORD COUNT=3 4823, 4c32, 4c52
	cfg_reg_addr = base_addr + (4*CMDWRD1) + (CMDBLKWIDTH*4*TM1);  // Command Block for TM
 a7a:	687b      	ldr	r3, [r7, #4]
 a7c:	3344      	adds	r3, #68	; 0x44
 a7e:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:118
	tm1cmd = BRM_get_Cmd_Wrd(RTADD,1,1,TMWRDCNT);
 a80:	230e      	movs	r3, #14
 a82:	18fc      	adds	r4, r7, r3
 a84:	2009      	movs	r0, #9
 a86:	2101      	movs	r1, #1
 a88:	2201      	movs	r2, #1
 a8a:	2312      	movs	r3, #18
 a8c:	f7ff ff42 	bl	914 <BRM_get_Cmd_Wrd>
 a90:	1c03      	adds	r3, r0, #0
 a92:	8023      	strh	r3, [r4, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:119
	HW_set_32bit_reg(cfg_reg_addr, tm1cmd); //RT Add:9, SA1, TX, WORD COUNT = 18
 a94:	230e      	movs	r3, #14
 a96:	18fb      	adds	r3, r7, r3
 a98:	881b      	ldrh	r3, [r3, #0]
 a9a:	697a      	ldr	r2, [r7, #20]
 a9c:	1c10      	adds	r0, r2, #0
 a9e:	1c19      	adds	r1, r3, #0
 aa0:	f7ff fb04 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:122
	
	//HW_set_32bit_reg(cfg_reg_addr, 0x4C32); //RT Add:9, SA1, TX, WORD COUNT = 18
	cfg_reg_addr = base_addr + (4*CMDWRD1) + (CMDBLKWIDTH*4*TM2); // Command Block for TM
 aa4:	687b      	ldr	r3, [r7, #4]
 aa6:	3364      	adds	r3, #100	; 0x64
 aa8:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:123
	tm2cmd = BRM_get_Cmd_Wrd(RTADD,2,1,TMWRDCNT);
 aaa:	230c      	movs	r3, #12
 aac:	18fc      	adds	r4, r7, r3
 aae:	2009      	movs	r0, #9
 ab0:	2102      	movs	r1, #2
 ab2:	2201      	movs	r2, #1
 ab4:	2312      	movs	r3, #18
 ab6:	f7ff ff2d 	bl	914 <BRM_get_Cmd_Wrd>
 aba:	1c03      	adds	r3, r0, #0
 abc:	8023      	strh	r3, [r4, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:124
	HW_set_32bit_reg(cfg_reg_addr, tm2cmd); //RT Add:9, SA2, TX, WORD COUNT = 18
 abe:	230c      	movs	r3, #12
 ac0:	18fb      	adds	r3, r7, r3
 ac2:	881b      	ldrh	r3, [r3, #0]
 ac4:	697a      	ldr	r2, [r7, #20]
 ac6:	1c10      	adds	r0, r2, #0
 ac8:	1c19      	adds	r1, r3, #0
 aca:	f7ff faef 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:128
	//HW_set_32bit_reg(cfg_reg_addr, 0x4C52); //RT Add:9, SA2, TX, WORD COUNT = 18
	
	/* Data Pointers */
	cfg_reg_addr = base_addr + (4*DATAPTR);//+(8*(CMBBLK1-1));
 ace:	687b      	ldr	r3, [r7, #4]
 ad0:	330c      	adds	r3, #12
 ad2:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:129
	for(i = 0; i < EOL; ++i )
 ad4:	2313      	movs	r3, #19
 ad6:	18fb      	adds	r3, r7, r3
 ad8:	2200      	movs	r2, #0
 ada:	701a      	strb	r2, [r3, #0]
 adc:	e014      	b.n	b08 <BRMCmdBlk_Config+0x15c>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:131 (discriminator 3)
	{
		HW_set_32bit_reg(cfg_reg_addr, 0x100+(DATAAREAWIDTH*i));
 ade:	2313      	movs	r3, #19
 ae0:	18fb      	adds	r3, r7, r3
 ae2:	781b      	ldrb	r3, [r3, #0]
 ae4:	3308      	adds	r3, #8
 ae6:	015b      	lsls	r3, r3, #5
 ae8:	1c1a      	adds	r2, r3, #0
 aea:	697b      	ldr	r3, [r7, #20]
 aec:	1c18      	adds	r0, r3, #0
 aee:	1c11      	adds	r1, r2, #0
 af0:	f7ff fadc 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:132 (discriminator 3)
		cfg_reg_addr += CMDBLKWIDTH*4;
 af4:	697b      	ldr	r3, [r7, #20]
 af6:	3320      	adds	r3, #32
 af8:	617b      	str	r3, [r7, #20]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:129 (discriminator 3)
	HW_set_32bit_reg(cfg_reg_addr, tm2cmd); //RT Add:9, SA2, TX, WORD COUNT = 18
	//HW_set_32bit_reg(cfg_reg_addr, 0x4C52); //RT Add:9, SA2, TX, WORD COUNT = 18
	
	/* Data Pointers */
	cfg_reg_addr = base_addr + (4*DATAPTR);//+(8*(CMBBLK1-1));
	for(i = 0; i < EOL; ++i )
 afa:	2313      	movs	r3, #19
 afc:	18fb      	adds	r3, r7, r3
 afe:	2213      	movs	r2, #19
 b00:	18ba      	adds	r2, r7, r2
 b02:	7812      	ldrb	r2, [r2, #0]
 b04:	3201      	adds	r2, #1
 b06:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:129 (discriminator 1)
 b08:	2313      	movs	r3, #19
 b0a:	18fb      	adds	r3, r7, r3
 b0c:	781b      	ldrb	r3, [r3, #0]
 b0e:	2b06      	cmp	r3, #6
 b10:	d9e5      	bls.n	ade <BRMCmdBlk_Config+0x132>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../drivers/CoreBRM1553/core_brm1553.c:135
	{
		HW_set_32bit_reg(cfg_reg_addr, 0x100+(DATAAREAWIDTH*i));
		cfg_reg_addr += CMDBLKWIDTH*4;
	}

	}
 b12:	46bd      	mov	sp, r7
 b14:	b007      	add	sp, #28
 b16:	bd90      	pop	{r4, r7, pc}

00000b18 <IRQ0_IRQHandler>:
IRQ0_IRQHandler():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:51
/******************************************************************************
 * Cortex-M1 interrupt handler for external interrupt 0.
 * This function is called when the Cortex-M1 IRQ0 signal is asserted.
 *****************************************************************************/
__attribute__((__interrupt__)) void IRQ0_IRQHandler( void )
{
 b18:	b580      	push	{r7, lr}
 b1a:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:55
	/**************************************************************************
	 * Call the  isr routine
	 *************************************************************************/
	timer0_isr();
 b1c:	f000 f806 	bl	b2c <timer0_isr>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:60

	/**************************************************************************
	 * Clear the interrupt in the Cortex-M1 NVIC.
	 *************************************************************************/
    NVIC_clear_interrupt( NVIC_IRQ_0 );
 b20:	2000      	movs	r0, #0
 b22:	f7ff fb77 	bl	214 <NVIC_clear_interrupt>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:61
}
 b26:	46bd      	mov	sp, r7
 b28:	bd80      	pop	{r7, pc}
 b2a:	46c0      	nop			; (mov r8, r8)

00000b2c <timer0_isr>:
timer0_isr():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:67

/******************************************************************************
 * Timer interrupt service routine.
 *****************************************************************************/
void timer0_isr( void )
{
 b2c:	b580      	push	{r7, lr}
 b2e:	af00      	add	r7, sp, #0
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:73
	/* static int32_t output_state = 1;

	/**************************************************************************
	 * Toggle LED attached to GPIO_0.
	 *************************************************************************/
	if ( output_state > 0 )
 b30:	4b10      	ldr	r3, [pc, #64]	; (b74 <timer0_isr+0x48>)
 b32:	681b      	ldr	r3, [r3, #0]
 b34:	2b00      	cmp	r3, #0
 b36:	dd08      	ble.n	b4a <timer0_isr+0x1e>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:75
	{
		output_state = 0;
 b38:	4b0e      	ldr	r3, [pc, #56]	; (b74 <timer0_isr+0x48>)
 b3a:	2200      	movs	r2, #0
 b3c:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:76
		tm1schedulecounter = tm1schedulecounter + 1;
 b3e:	4b0e      	ldr	r3, [pc, #56]	; (b78 <timer0_isr+0x4c>)
 b40:	681b      	ldr	r3, [r3, #0]
 b42:	1c5a      	adds	r2, r3, #1
 b44:	4b0c      	ldr	r3, [pc, #48]	; (b78 <timer0_isr+0x4c>)
 b46:	601a      	str	r2, [r3, #0]
 b48:	e007      	b.n	b5a <timer0_isr+0x2e>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:80
	}
	else
	{
		output_state = 1;
 b4a:	4b0a      	ldr	r3, [pc, #40]	; (b74 <timer0_isr+0x48>)
 b4c:	2201      	movs	r2, #1
 b4e:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:81
	    tm2schedulecounter = tm2schedulecounter + 1;
 b50:	4b0a      	ldr	r3, [pc, #40]	; (b7c <timer0_isr+0x50>)
 b52:	681b      	ldr	r3, [r3, #0]
 b54:	1c5a      	adds	r2, r3, #1
 b56:	4b09      	ldr	r3, [pc, #36]	; (b7c <timer0_isr+0x50>)
 b58:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:84
	}

	cycle_1 = 0;
 b5a:	4b09      	ldr	r3, [pc, #36]	; (b80 <timer0_isr+0x54>)
 b5c:	2200      	movs	r2, #0
 b5e:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:85
	cycle_0 = 0;
 b60:	4b08      	ldr	r3, [pc, #32]	; (b84 <timer0_isr+0x58>)
 b62:	2200      	movs	r2, #0
 b64:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:94
	//GPIO_set_bits( &g_gpio,	GPIO_BIT_0, output_state );

	/**************************************************************************
	 * Clear the interrupt within the timer.
	 *************************************************************************/
	TMR_clear_int( &g_timer0 );
 b66:	4b08      	ldr	r3, [pc, #32]	; (b88 <timer0_isr+0x5c>)
 b68:	1c18      	adds	r0, r3, #0
 b6a:	f7ff fc45 	bl	3f8 <TMR_clear_int>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:95
}
 b6e:	46bd      	mov	sp, r7
 b70:	bd80      	pop	{r7, pc}
 b72:	46c0      	nop			; (mov r8, r8)
 b74:	00000e34 	.word	0x00000e34
 b78:	00000e48 	.word	0x00000e48
 b7c:	00000e50 	.word	0x00000e50
 b80:	00000e58 	.word	0x00000e58
 b84:	00000e4c 	.word	0x00000e4c
 b88:	00000e3c 	.word	0x00000e3c

00000b8c <main>:
main():
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:101

/******************************************************************************
 * main function.
 *****************************************************************************/
int main( void )
{
 b8c:	b580      	push	{r7, lr}
 b8e:	b088      	sub	sp, #32
 b90:	af02      	add	r7, sp, #8
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:107
	 uint32_t counter_value, counter_ctrl,counter_load;
	 uint8_t switch_value, i;
	 // LOOPBACK   "101"
	 // STREAM_IN  "011"
	 // STREAM_OUT "100"
	 uint32_t  slffconfig = 0x00000004UL;
 b92:	2304      	movs	r3, #4
 b94:	60fb      	str	r3, [r7, #12]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:116
	 uint16_t brmregctrlreg, brmregoprnsts, brmregcmd, brmregcmdblkptr, tm1, tm2, tm3, tm4, tm5;
	/**************************************************************************
	 * Configure Interrupts
     *    Initialize the Cortex-M1 NVIC.
	 *************************************************************************/
    NVIC_init();
 b96:	f7ff fb13 	bl	1c0 <NVIC_init>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:121

	/**************************************************************************
	 * Initialize and configure the timer.
	 *************************************************************************/
	TMR_init( &g_timer0,
 b9a:	4a7f      	ldr	r2, [pc, #508]	; (d98 <main+0x20c>)
 b9c:	497f      	ldr	r1, [pc, #508]	; (d9c <main+0x210>)
 b9e:	4b80      	ldr	r3, [pc, #512]	; (da0 <main+0x214>)
 ba0:	9300      	str	r3, [sp, #0]
 ba2:	1c10      	adds	r0, r2, #0
 ba4:	2200      	movs	r2, #0
 ba6:	2309      	movs	r3, #9
 ba8:	f7ff fb48 	bl	23c <TMR_init>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:130
			  TIMER_LOAD_VALUE );

	/**************************************************************************
	 * Enable the timer to generate interrupts.
	 *************************************************************************/
	TMR_enable_int( &g_timer0 );
 bac:	4b7a      	ldr	r3, [pc, #488]	; (d98 <main+0x20c>)
 bae:	1c18      	adds	r0, r3, #0
 bb0:	f7ff fbf8 	bl	3a4 <TMR_enable_int>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:131
	GPIO_init( &g_gpio, COREGPIO_BASE_ADDR, GPIO_APB_32_BITS_BUS );
 bb4:	4a7b      	ldr	r2, [pc, #492]	; (da4 <main+0x218>)
 bb6:	23a0      	movs	r3, #160	; 0xa0
 bb8:	061b      	lsls	r3, r3, #24
 bba:	1c10      	adds	r0, r2, #0
 bbc:	1c19      	adds	r1, r3, #0
 bbe:	2202      	movs	r2, #2
 bc0:	f7ff fc42 	bl	448 <GPIO_init>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:132
	GPIO_config( &g_gpio, GPIO_0, GPIO_OUTPUT_MODE );
 bc4:	4b77      	ldr	r3, [pc, #476]	; (da4 <main+0x218>)
 bc6:	1c18      	adds	r0, r3, #0
 bc8:	2100      	movs	r1, #0
 bca:	2205      	movs	r2, #5
 bcc:	f7ff fcc4 	bl	558 <GPIO_config>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:133
	BRM_Reset (COREBRM_APBAUX_BASE_ADDR);
 bd0:	4b75      	ldr	r3, [pc, #468]	; (da8 <main+0x21c>)
 bd2:	1c18      	adds	r0, r3, #0
 bd4:	f7ff fe22 	bl	81c <BRM_Reset>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:134
	BRMReg_Config(COREBRM_REG_BASE_ADDR);
 bd8:	23c0      	movs	r3, #192	; 0xc0
 bda:	061b      	lsls	r3, r3, #24
 bdc:	1c18      	adds	r0, r3, #0
 bde:	f7ff fe4b 	bl	878 <BRMReg_Config>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:135
	BRMCmdBlk_Config (COREBRM_CMDBLK_BASE_ADDR);
 be2:	4b72      	ldr	r3, [pc, #456]	; (dac <main+0x220>)
 be4:	1c18      	adds	r0, r3, #0
 be6:	f7ff fee1 	bl	9ac <BRMCmdBlk_Config>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:139
	/**************************************************************************
	 * Enable interrupts at the processor level.
	 *************************************************************************/
    NVIC_enable_interrupt( NVIC_IRQ_0 );
 bea:	2000      	movs	r0, #0
 bec:	f7ff fafe 	bl	1ec <NVIC_enable_interrupt>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:144

	/**************************************************************************
	 * Start the timer.
	 *************************************************************************/
    TMR_start( &g_timer0 );
 bf0:	4b69      	ldr	r3, [pc, #420]	; (d98 <main+0x20c>)
 bf2:	1c18      	adds	r0, r3, #0
 bf4:	f7ff fbac 	bl	350 <TMR_start>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:162
	 * the timer interrupt.
	 *************************************************************************/
	while( 1 )
	{

		if ((output_state == 0) && (cycle_0 == 0))
 bf8:	4b6d      	ldr	r3, [pc, #436]	; (db0 <main+0x224>)
 bfa:	681b      	ldr	r3, [r3, #0]
 bfc:	2b00      	cmp	r3, #0
 bfe:	d156      	bne.n	cae <main+0x122>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:162 (discriminator 1)
 c00:	4b6c      	ldr	r3, [pc, #432]	; (db4 <main+0x228>)
 c02:	681b      	ldr	r3, [r3, #0]
 c04:	2b00      	cmp	r3, #0
 c06:	d152      	bne.n	cae <main+0x122>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:166
		//if (cycle_0 == 0)
		{
			// Poll TC request flag from APBAUX
			newcmdarrival = HW_get_32bit_reg(APB_AUX_BASE_ADDR+NEWCMDFLG);
 c08:	4b6b      	ldr	r3, [pc, #428]	; (db8 <main+0x22c>)
 c0a:	1c18      	adds	r0, r3, #0
 c0c:	f7ff fa50 	bl	b0 <HW_get_32bit_reg>
 c10:	1c03      	adds	r3, r0, #0
 c12:	60bb      	str	r3, [r7, #8]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:167
			if ((newcmdarrival & 0x1) == 1) 
 c14:	68bb      	ldr	r3, [r7, #8]
 c16:	2201      	movs	r2, #1
 c18:	4013      	ands	r3, r2
 c1a:	d023      	beq.n	c64 <main+0xd8>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:170
			{
				// Get the TC data from APBAUX register
				newcmddata = HW_get_32bit_reg(APB_AUX_BASE_ADDR+NEWCMDDATA);
 c1c:	4b67      	ldr	r3, [pc, #412]	; (dbc <main+0x230>)
 c1e:	1c18      	adds	r0, r3, #0
 c20:	f7ff fa46 	bl	b0 <HW_get_32bit_reg>
 c24:	1c03      	adds	r3, r0, #0
 c26:	607b      	str	r3, [r7, #4]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:173
				
				/* Update TC Data Area */
				HW_set_32bit_reg(COREBRM_DATAAREA_BASE_ADDR,((newcmddata & 0xffff0000)<<16)); // Command MSB
 c28:	4b65      	ldr	r3, [pc, #404]	; (dc0 <main+0x234>)
 c2a:	1c18      	adds	r0, r3, #0
 c2c:	2100      	movs	r1, #0
 c2e:	f7ff fa3d 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:174
				HW_set_32bit_reg(COREBRM_DATAAREA_BASE_ADDR + (4*1),(newcmddata & 0xffff));   // Command LSB 
 c32:	687b      	ldr	r3, [r7, #4]
 c34:	041b      	lsls	r3, r3, #16
 c36:	0c1b      	lsrs	r3, r3, #16
 c38:	4a62      	ldr	r2, [pc, #392]	; (dc4 <main+0x238>)
 c3a:	1c10      	adds	r0, r2, #0
 c3c:	1c19      	adds	r1, r3, #0
 c3e:	f7ff fa35 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:175
				HW_set_32bit_reg(COREBRM_DATAAREA_BASE_ADDR + (4*2), 0x55);                 // Check Word
 c42:	4b61      	ldr	r3, [pc, #388]	; (dc8 <main+0x23c>)
 c44:	1c18      	adds	r0, r3, #0
 c46:	2155      	movs	r1, #85	; 0x55
 c48:	f7ff fa30 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:177
				
				HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(CMDBLKWIDTH*4*TC1), 0x5600); // Make TC Opcode as Execute and Branch Unconditionally
 c4c:	4a57      	ldr	r2, [pc, #348]	; (dac <main+0x220>)
 c4e:	23ac      	movs	r3, #172	; 0xac
 c50:	01db      	lsls	r3, r3, #7
 c52:	1c10      	adds	r0, r2, #0
 c54:	1c19      	adds	r1, r3, #0
 c56:	f7ff fa29 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:179
				
				HW_set_32bit_reg(APB_AUX_BASE_ADDR+NEWCMDFLG, 0); // Reset TC request flag in APBAUX
 c5a:	4b57      	ldr	r3, [pc, #348]	; (db8 <main+0x22c>)
 c5c:	1c18      	adds	r0, r3, #0
 c5e:	2100      	movs	r1, #0
 c60:	f7ff fa24 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:183
			}
			

				if (tm1schedulecounter >= TM_SCHEDULE_COUNT) 
 c64:	4b59      	ldr	r3, [pc, #356]	; (dcc <main+0x240>)
 c66:	681b      	ldr	r3, [r3, #0]
 c68:	2b3f      	cmp	r3, #63	; 0x3f
 c6a:	dd09      	ble.n	c80 <main+0xf4>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:185
				{
				   tm1schedulecounter = 0;
 c6c:	4b57      	ldr	r3, [pc, #348]	; (dcc <main+0x240>)
 c6e:	2200      	movs	r2, #0
 c70:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:186
				   HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(CMDBLKWIDTH*4*TM1), 0x5600); // Make SA1 TM Opcode as Execute and Branch Unconditionally
 c72:	4a57      	ldr	r2, [pc, #348]	; (dd0 <main+0x244>)
 c74:	23ac      	movs	r3, #172	; 0xac
 c76:	01db      	lsls	r3, r3, #7
 c78:	1c10      	adds	r0, r2, #0
 c7a:	1c19      	adds	r1, r3, #0
 c7c:	f7ff fa16 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:189
				  // HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(8*4*3), 0x5600); // Make SA1 TM Opcode as Execute and Branch Unconditionally
				}
				HW_set_32bit_reg(COREBRM_REG_BASE_ADDR +(CmdBlkPtr*4), BRMREG8); /* Initialize Command Block Pointer */
 c80:	4b54      	ldr	r3, [pc, #336]	; (dd4 <main+0x248>)
 c82:	1c18      	adds	r0, r3, #0
 c84:	2100      	movs	r1, #0
 c86:	f7ff fa11 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:191
				
				HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(CMDBLKWIDTH*4*TM2), 0x2600); // Make SA2 TM Opcode as GOTO
 c8a:	4a53      	ldr	r2, [pc, #332]	; (dd8 <main+0x24c>)
 c8c:	2398      	movs	r3, #152	; 0x98
 c8e:	019b      	lsls	r3, r3, #6
 c90:	1c10      	adds	r0, r2, #0
 c92:	1c19      	adds	r1, r3, #0
 c94:	f7ff fa0a 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:192
				HW_set_32bit_reg(COREBRM_REG_BASE_ADDR + (CtrlReg*4),(BRMREG0 | 0x8000)); // Set STX bit high for transactions to start
 c98:	23c0      	movs	r3, #192	; 0xc0
 c9a:	061b      	lsls	r3, r3, #24
 c9c:	4a4f      	ldr	r2, [pc, #316]	; (ddc <main+0x250>)
 c9e:	1c18      	adds	r0, r3, #0
 ca0:	1c11      	adds	r1, r2, #0
 ca2:	f7ff fa03 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:193
				cycle_0 = 1;
 ca6:	4b43      	ldr	r3, [pc, #268]	; (db4 <main+0x228>)
 ca8:	2201      	movs	r2, #1
 caa:	601a      	str	r2, [r3, #0]
 cac:	e072      	b.n	d94 <main+0x208>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:202
				//brmregcmd     = HW_get_32bit_reg(0xc0000008);
				//brmregcmdblkptr = HW_get_32bit_reg(0xc0000020);

			/*}*/
		}
		else if ((output_state == 1) && (cycle_1 == 0))
 cae:	4b40      	ldr	r3, [pc, #256]	; (db0 <main+0x224>)
 cb0:	681b      	ldr	r3, [r3, #0]
 cb2:	2b01      	cmp	r3, #1
 cb4:	d16e      	bne.n	d94 <main+0x208>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:202 (discriminator 1)
 cb6:	4b4a      	ldr	r3, [pc, #296]	; (de0 <main+0x254>)
 cb8:	681b      	ldr	r3, [r3, #0]
 cba:	2b00      	cmp	r3, #0
 cbc:	d16a      	bne.n	d94 <main+0x208>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:209

			//brmregctrlreg = HW_get_32bit_reg(0xc0000000);
			//brmregcmdblkptr = HW_get_32bit_reg(0xc0000020);

			/* Check Command Block Pointer has reached the End of List */			
			if (((HW_get_32bit_reg(COREBRM_REG_BASE_ADDR+(CmdBlkPtr*4))) & 0xffff) == (EOL*CMDBLKWIDTH))
 cbe:	4b45      	ldr	r3, [pc, #276]	; (dd4 <main+0x248>)
 cc0:	1c18      	adds	r0, r3, #0
 cc2:	f7ff f9f5 	bl	b0 <HW_get_32bit_reg>
 cc6:	1c03      	adds	r3, r0, #0
 cc8:	041b      	lsls	r3, r3, #16
 cca:	0c1b      	lsrs	r3, r3, #16
 ccc:	2b38      	cmp	r3, #56	; 0x38
 cce:	d15e      	bne.n	d8e <main+0x202>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:212
			{
				// Get Base address of TM1 Data Area received in BRM Back end memory
				cfg_reg_addr_tmrx = COREBRM_DATAAREA_BASE_ADDR + (DATAAREAWIDTH*4*TM1);
 cd0:	4b44      	ldr	r3, [pc, #272]	; (de4 <main+0x258>)
 cd2:	603b      	str	r3, [r7, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:214
				// Get Base Address of TM1 Data Area to be send via SPI in APBAUX area
				cfg_reg_addr_tmtx = APB_AUX_BASE_ADDR + NEWTMDATA;
 cd4:	4b44      	ldr	r3, [pc, #272]	; (de8 <main+0x25c>)
 cd6:	613b      	str	r3, [r7, #16]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:217
				
				//  Update TM Data received from RT in APBAUX registers
				for (i=0; i<TMWRDCNT; ++i)
 cd8:	2317      	movs	r3, #23
 cda:	18fb      	adds	r3, r7, r3
 cdc:	2200      	movs	r2, #0
 cde:	701a      	strb	r2, [r3, #0]
 ce0:	e019      	b.n	d16 <main+0x18a>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:219 (discriminator 3)
				{
					HW_set_32bit_reg(cfg_reg_addr_tmtx, HW_get_32bit_reg(cfg_reg_addr_tmrx+(4*i)));
 ce2:	2317      	movs	r3, #23
 ce4:	18fb      	adds	r3, r7, r3
 ce6:	781b      	ldrb	r3, [r3, #0]
 ce8:	009b      	lsls	r3, r3, #2
 cea:	1c1a      	adds	r2, r3, #0
 cec:	683b      	ldr	r3, [r7, #0]
 cee:	18d3      	adds	r3, r2, r3
 cf0:	1c18      	adds	r0, r3, #0
 cf2:	f7ff f9dd 	bl	b0 <HW_get_32bit_reg>
 cf6:	1c02      	adds	r2, r0, #0
 cf8:	693b      	ldr	r3, [r7, #16]
 cfa:	1c18      	adds	r0, r3, #0
 cfc:	1c11      	adds	r1, r2, #0
 cfe:	f7ff f9d5 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:220 (discriminator 3)
					cfg_reg_addr_tmtx += 4;
 d02:	693b      	ldr	r3, [r7, #16]
 d04:	3304      	adds	r3, #4
 d06:	613b      	str	r3, [r7, #16]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:217 (discriminator 3)
				cfg_reg_addr_tmrx = COREBRM_DATAAREA_BASE_ADDR + (DATAAREAWIDTH*4*TM1);
				// Get Base Address of TM1 Data Area to be send via SPI in APBAUX area
				cfg_reg_addr_tmtx = APB_AUX_BASE_ADDR + NEWTMDATA;
				
				//  Update TM Data received from RT in APBAUX registers
				for (i=0; i<TMWRDCNT; ++i)
 d08:	2317      	movs	r3, #23
 d0a:	18fb      	adds	r3, r7, r3
 d0c:	2217      	movs	r2, #23
 d0e:	18ba      	adds	r2, r7, r2
 d10:	7812      	ldrb	r2, [r2, #0]
 d12:	3201      	adds	r2, #1
 d14:	701a      	strb	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:217 (discriminator 1)
 d16:	2317      	movs	r3, #23
 d18:	18fb      	adds	r3, r7, r3
 d1a:	781b      	ldrb	r3, [r3, #0]
 d1c:	2b11      	cmp	r3, #17
 d1e:	d9e0      	bls.n	ce2 <main+0x156>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:223
				{
					HW_set_32bit_reg(cfg_reg_addr_tmtx, HW_get_32bit_reg(cfg_reg_addr_tmrx+(4*i)));
					cfg_reg_addr_tmtx += 4;
				}
				
				GPIO_set_output(&g_gpio,GPIO_0,(HW_get_32bit_reg(COREBRM_DATAAREA_BASE_ADDR + (DATAAREAWIDTH*4*TM1)) & 0x1)); // To be Removed
 d20:	4b30      	ldr	r3, [pc, #192]	; (de4 <main+0x258>)
 d22:	1c18      	adds	r0, r3, #0
 d24:	f7ff f9c4 	bl	b0 <HW_get_32bit_reg>
 d28:	1c03      	adds	r3, r0, #0
 d2a:	b2db      	uxtb	r3, r3
 d2c:	2201      	movs	r2, #1
 d2e:	4013      	ands	r3, r2
 d30:	b2db      	uxtb	r3, r3
 d32:	4a1c      	ldr	r2, [pc, #112]	; (da4 <main+0x218>)
 d34:	1c10      	adds	r0, r2, #0
 d36:	2100      	movs	r1, #0
 d38:	1c1a      	adds	r2, r3, #0
 d3a:	f7ff fc45 	bl	5c8 <GPIO_set_output>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:226

				// Reset TM1 and TC1 Opcode as GOTO
				HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(CMDBLKWIDTH*4*TM1), 0x2600); // Reset SA1 TM Opcode as GOTO
 d3e:	4a24      	ldr	r2, [pc, #144]	; (dd0 <main+0x244>)
 d40:	2398      	movs	r3, #152	; 0x98
 d42:	019b      	lsls	r3, r3, #6
 d44:	1c10      	adds	r0, r2, #0
 d46:	1c19      	adds	r1, r3, #0
 d48:	f7ff f9b0 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:227
				HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(CMDBLKWIDTH*4*TC1), 0x2600); // Reset TC1 Opcode as GOTO
 d4c:	4a17      	ldr	r2, [pc, #92]	; (dac <main+0x220>)
 d4e:	2398      	movs	r3, #152	; 0x98
 d50:	019b      	lsls	r3, r3, #6
 d52:	1c10      	adds	r0, r2, #0
 d54:	1c19      	adds	r1, r3, #0
 d56:	f7ff f9a9 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:230
				  
				  // Schedule TM requests for every 1 second from RT
                if (tm2schedulecounter >= TM_SCHEDULE_COUNT) 
 d5a:	4b24      	ldr	r3, [pc, #144]	; (dec <main+0x260>)
 d5c:	681b      	ldr	r3, [r3, #0]
 d5e:	2b3f      	cmp	r3, #63	; 0x3f
 d60:	dd15      	ble.n	d8e <main+0x202>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:232
				{
				   tm2schedulecounter = 0;
 d62:	4b22      	ldr	r3, [pc, #136]	; (dec <main+0x260>)
 d64:	2200      	movs	r2, #0
 d66:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:233
				   HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(CMDBLKWIDTH*4*TM2), 0x5600); // Make SA1 TM Opcode as Execute and Branch Unconditionally
 d68:	4a1b      	ldr	r2, [pc, #108]	; (dd8 <main+0x24c>)
 d6a:	23ac      	movs	r3, #172	; 0xac
 d6c:	01db      	lsls	r3, r3, #7
 d6e:	1c10      	adds	r0, r2, #0
 d70:	1c19      	adds	r1, r3, #0
 d72:	f7ff f99b 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:236
				  // HW_set_32bit_reg(COREBRM_CMDBLK_BASE_ADDR+(8*4*3), 0x5600); // Make SA1 TM Opcode as Execute and Branch Unconditionally
				  
				   HW_set_32bit_reg(COREBRM_REG_BASE_ADDR +(CmdBlkPtr*4), BRMREG8); /* Initialize Command Block Pointer */
 d76:	4b17      	ldr	r3, [pc, #92]	; (dd4 <main+0x248>)
 d78:	1c18      	adds	r0, r3, #0
 d7a:	2100      	movs	r1, #0
 d7c:	f7ff f996 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:237
				   HW_set_32bit_reg(COREBRM_REG_BASE_ADDR + (CtrlReg*4), (BRMREG0 | 0x8000)); // Set STX bit high for transactions to start		
 d80:	23c0      	movs	r3, #192	; 0xc0
 d82:	061b      	lsls	r3, r3, #24
 d84:	4a15      	ldr	r2, [pc, #84]	; (ddc <main+0x250>)
 d86:	1c18      	adds	r0, r3, #0
 d88:	1c11      	adds	r1, r2, #0
 d8a:	f7ff f98f 	bl	ac <HW_set_32bit_reg>
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:241
				}
											
			}
			cycle_1 = 0;
 d8e:	4b14      	ldr	r3, [pc, #80]	; (de0 <main+0x254>)
 d90:	2200      	movs	r2, #0
 d92:	601a      	str	r2, [r3, #0]
C:\Users\Admin\Desktop\USBSim\MicroSemi_SC_WS\m1_custom_apb_timer\Debug/../main.c:244
		}

	}
 d94:	e730      	b.n	bf8 <main+0x6c>
 d96:	46c0      	nop			; (mov r8, r8)
 d98:	00000e3c 	.word	0x00000e3c
 d9c:	a0000300 	.word	0xa0000300
 da0:	000002ee 	.word	0x000002ee
 da4:	00000e40 	.word	0x00000e40
 da8:	a0000c00 	.word	0xa0000c00
 dac:	c0040000 	.word	0xc0040000
 db0:	00000e34 	.word	0x00000e34
 db4:	00000e4c 	.word	0x00000e4c
 db8:	a0000b10 	.word	0xa0000b10
 dbc:	a0000b14 	.word	0xa0000b14
 dc0:	c0040400 	.word	0xc0040400
 dc4:	c0040404 	.word	0xc0040404
 dc8:	c0040408 	.word	0xc0040408
 dcc:	00000e48 	.word	0x00000e48
 dd0:	c0040040 	.word	0xc0040040
 dd4:	c0000020 	.word	0xc0000020
 dd8:	c0040060 	.word	0xc0040060
 ddc:	00008210 	.word	0x00008210
 de0:	00000e58 	.word	0x00000e58
 de4:	c0040500 	.word	0xc0040500
 de8:	a0000b18 	.word	0xa0000b18
 dec:	00000e50 	.word	0x00000e50
$d():
 df0:	642f2e2e 	.word	0x642f2e2e
 df4:	65766972 	.word	0x65766972
 df8:	432f7372 	.word	0x432f7372
 dfc:	5465726f 	.word	0x5465726f
 e00:	72656d69 	.word	0x72656d69
 e04:	726f632f 	.word	0x726f632f
 e08:	69745f65 	.word	0x69745f65
 e0c:	2e72656d 	.word	0x2e72656d
 e10:	00000063 	.word	0x00000063
 e14:	642f2e2e 	.word	0x642f2e2e
 e18:	65766972 	.word	0x65766972
 e1c:	432f7372 	.word	0x432f7372
 e20:	4765726f 	.word	0x4765726f
 e24:	2f4f4950 	.word	0x2f4f4950
 e28:	65726f63 	.word	0x65726f63
 e2c:	6970675f 	.word	0x6970675f
 e30:	00632e6f 	.word	0x00632e6f
